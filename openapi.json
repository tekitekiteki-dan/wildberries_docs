{
  "openapi": "3.0.1",
  "info": {
    "title": "API продавца",
    "version": "1.7",
    "description": "# Общее описание\n<style> .version {\n  border: 0.1rem #b3b3b3 solid;\n  background-color: #F9F9F9;\n  color: #32329FE6;\n  height: 25px;\n  width: 150px;\n  text-align: center\n}, </style> <style> .warning {\n  border: 1.6rem #b3b3b3 solid;\n  background-color: #F9F9F9;\n  color: #247706;\n  text-align: center\n} </style>\n\nWildberries API предоставляет продавцам возможность управления магазином и получения оперативной и статистической информации по протоколу HTTP RestAPI. <br> Описание API предоставляется в формате [Swagger](https://swagger.io/) (Open API) и может быть использовано для импорта в другие инструменты (такие как PostMan) или генерации клиентского кода на различных языках программирования с помощью [Swagger CodeGen](https://swagger.io/tools/swagger-codegen/)\n\n<ul> <li> Описание в оригинальном swagger-формате <a href=\"/swagger\">swagger</a> <li> OpenAPI-файл <a href=\"/swagger.yaml\">swagger.yaml</a> </ul>\n\n<br> Для ручной проверки API вы можете использовать: <ul> <li> Под ОС Windows - [PostMan](https://www.postman.com/) <li> Под ОС Linux - [curl](https://curl.se/)  </ul> <br>\n\n## Поддержка\nТехническая поддержка осуществляется через диалоги в личном кабинете продавца. При создании нового обращения в техподдержку используйте категорию API.\n<br> Новости и изменения, касающиеся API, публикуются в [новостной ленте Wildberries](https://seller.wildberries.ru/news).\n<br> Также готовятся к публикации Release Notes по API на сайте.  После их выхода будет сделан соответствующий анонс. <br> <br> <br>\n\n## Авторизация\nАвторизация осуществляется по токенам API, которые  владелец личного кабинета (главный пользователь) самостоятельно\n генерирует в разделе \n [Профиль --> Настройки --> Доступ к новому API](https://seller.wildberries.ru/supplier-settings/access-to-new-api).\n<br>Обратите внимание, что токен отображается ТОЛЬКО в момент создания. Его надо сохранить, потому что больше его отобразить будет нельзя. <br>Созданный токен следует добавлять в каждый запрос, прибавляя к запросу заголовок (http-header) формата `Authorization: .........`. <br> <br>Внимание! Изменился домен для методов статистики, актуальный: https://statistics-api.wildberries.ru <br> <br> <br>\n## Форматы\n### Дата и время\nВо всех методах API статистики дата и время передаются в формате [RFC3339](https://datatracker.ietf.org/doc/html/rfc3339).  <br> В большинстве случаев вы можете передать дату или дату со временем. Если время не указано, оно принимается равным 00:00:00. Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает часовой пояс UTC. При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br> Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul> <br>\n## Release Notes\n\n  #### 2023.01.13 v1.7\n  \n  Добавлено описание API рекламы\n\n#### 2022.12.21 v1.6\nДобавлена инструкция по загрузке статистики в Excel\n#### 2022.12.15 v1.5 \nНовая авторизация для методов API статистики 2022.12.15 в v1.5:\n#### 2022.10.31 v1.4 \nМетод будет отключен 2022.10.31 в v1.4: <ul> <li> `/content/v1/cards/list` </ul>\n\n#### 2022.09.20 v1.2 \nВ связи с переходом на новое API Контента старые методы будут отключены. К их числу относятся: <ul> <li> `/card/*` <li> `/api/v1/config/*` <li> `/api/v1/directory/*` </ul>\nДанные методы теперь возвращают код 404.  Новое API Контента описано в данном документе в разделах Контент / * <br> <br>\n"
  },
  "security": [
    {
      "HeaderApiKey": []
    }
  ],
  "components": {
    "securitySchemes": {
      "HeaderApiKey": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "parameters": {
      "quantity": {
        "in": "query",
        "name": "quantity",
        "description": "`2` - товар с нулевым остатком, `1` - товар с ненулевым остатком, `0` - товар с любым остатком",
        "schema": {
          "type": "integer",
          "enum": [
            0,
            1,
            2
          ]
        }
      },
      "activateFrom": {
        "description": "Дата активации скидки в формате `YYYY-MM-DD` или `YYYY-MM-DD HH:MM:SS`. Если не указывать, скидка начнет действовать сразу.",
        "in": "query",
        "name": "activateFrom",
        "schema": {
          "type": "string"
        }
      },
      "Warehouse": {
        "name": "warehouse",
        "in": "path",
        "required": true,
        "description": "Идентификатор склада продавца",
        "schema": {
          "type": "integer",
          "example": 1234
        }
      },
      "Supply": {
        "name": "supply",
        "in": "path",
        "required": true,
        "description": "Идентификатор поставки",
        "schema": {
          "type": "string",
          "example": "WB-GI-1234567"
        }
      },
      "Order": {
        "name": "order",
        "in": "path",
        "required": true,
        "description": "Идентификатор сборочного задания",
        "schema": {
          "type": "integer",
          "format": "int64",
          "example": 5632423
        }
      },
      "Next": {
        "name": "next",
        "in": "query",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        },
        "description": "Параметр пагинации. Устанавливает значение, с которого надо получить следующий пакет данных. Для получения полного списка данных должен быть равен 0 в первом запросе"
      },
      "Limit": {
        "name": "limit",
        "in": "query",
        "required": true,
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000
        },
        "description": "Параметр пагинации. Устанавливает предельное количество возвращаемых данных"
      },
      "id": {
        "in": "path",
        "name": "id",
        "description": "Идентификатор поставки.",
        "schema": {
          "type": "string",
          "example": "WB-GI-1234567"
        },
        "required": true
      },
      "dateFrom": {
        "in": "query",
        "name": "dateFrom",
        "schema": {
          "type": "string",
          "format": "RFC3339"
        },
        "required": true,
        "description": "Дата в формате RFC3339. Можно передать дату или дату со временем.  Время можно указывать с точностью до секунд или миллисекунд.  Литера `Z` в конце строки означает, что время передается в UTC-часовом поясе.  При ее отсутствии время считается в часовом поясе МСК (UTC+3). <br>Примеры: <ul> <li> `2019-06-20` <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T23:59:59` <li> `2019-06-20T00:00:00.12345Z` <li> `2019-06-20T00:00:00.12345` <li> `2017-03-25T00:00:00` </ul>\n"
      },
      "flag": {
        "in": "query",
        "name": "flag",
        "schema": {
          "type": "integer",
          "default": 0
        },
        "required": false,
        "description": "Если параметр `flag=0` (или не указан в строке запроса), при вызове API возвращаются данные,  у которых значение поля `lastChangeDate` (дата время обновления информации в сервисе) больше или равно переданному  значению параметра `dateFrom`.  При этом количество возвращенных строк данных варьируется в интервале от 0 до примерно 100 000. <br> Если параметр `flag=1`, то будет выгружена информация обо всех заказах или продажах с датой,  равной переданному параметру `dateFrom` (в данном случае время в дате значения не имеет).  При этом количество возвращенных строк данных будет равно количеству всех заказов или продаж,  сделанных в указанную дату, переданную в параметре `dateFrom`.\n"
      }
    },
    "requestBodies": {
      "NomenclatureArray": {
        "description": "Перечень номенклатур",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "discount": {
                    "type": "integer",
                    "description": "Размер скидки",
                    "example": 15
                  },
                  "nm": {
                    "type": "integer",
                    "description": "Номенклатура",
                    "example": 1234567
                  }
                }
              }
            }
          }
        },
        "required": true
      },
      "NomenclatureArray2": {
        "description": "Перечень номенклатур",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "promoCode": {
                    "type": "integer",
                    "description": "Промокод",
                    "example": 15
                  },
                  "nm": {
                    "type": "integer",
                    "description": "Номенклатура",
                    "example": 1234567
                  }
                }
              }
            }
          }
        },
        "required": true
      }
    },
    "schemas": {
      "responseBodyError400": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки.",
            "type": "boolean",
            "example": true
          },
          "errorText": {
            "description": "Описание ошибки.",
            "type": "string",
            "example": "Текст ошибки"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки.",
            "type": "string",
            "example": "Текст ошибки"
          }
        }
      },
      "responseBodyError403": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки.",
            "type": "boolean",
            "example": true
          },
          "errorText": {
            "description": "Описание ошибки.",
            "type": "string",
            "example": "Доступ запрещен"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки.",
            "type": "string",
            "example": "Доступ запрещен"
          }
        }
      },
      "Error": {
        "type": "object",
        "nullable": false,
        "properties": {
          "code": {
            "type": "string",
            "description": "Код ошибки",
            "nullable": false
          },
          "message": {
            "type": "string",
            "description": "Описание ошибки",
            "nullable": false
          },
          "data": {
            "type": "object",
            "description": "Дополнительные данные, обогащающие ошибку",
            "nullable": true
          }
        }
      },
      "Next": {
        "type": "integer",
        "format": "int64",
        "nullable": false,
        "description": "Параметр пагинации. Содержит значение, которое необходимо указать в запросе для получения следующего пакета данных"
      },
      "Supply": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false,
            "description": "Идентификатор поставки",
            "example": "WB-GI-1234567"
          },
          "done": {
            "type": "boolean",
            "nullable": false,
            "description": "Флаг закрытия поставки"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Дата создания поставки (RFC3339)",
            "example": "2022-10-05 20:30:36+03:00"
          },
          "closedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Дата закрытия поставки (RFC3339)",
            "example": "2022-10-05 20:30:36+03:00"
          },
          "scanDt": {
            "type": "string",
            "nullable": false,
            "format": "date-time",
            "description": "Дата скана поставки (RFC3339)",
            "example": "2022-10-05 20:30:36+03:00"
          },
          "name": {
            "type": "string",
            "nullable": false,
            "description": "Наименование поставки",
            "example": "Тестовая поставка"
          },
          "isLargeCargo": {
            "type": "bool",
            "nullable": true,
            "description": "сКГТ-признак поставки"
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": false,
            "description": "Идентификатор сборочного задания в Маркетплейсе",
            "example": 13833711
          },
          "rid": {
            "type": "string",
            "nullable": false,
            "description": "Идентификатор сборочного задания в системе Wildberries",
            "example": "f884001e44e511edb8780242ac120002"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Дата создания сборочного задания (RFC3339)",
            "example": "2022-10-05 19:44:43+03:00"
          },
          "warehouseId": {
            "type": "integer",
            "nullable": false,
            "description": "Идентификатор склада продавца, на который поступило сборочное задание",
            "example": 658434
          },
          "supplyId": {
            "type": "string",
            "description": "Идентификатор поставки. Возвращается, если заказ закреплён за поставкой"
          },
          "prioritySc": {
            "type": "array",
            "nullable": false,
            "description": "Массив приоритетных СЦ для доставки сборочного задания. Если поле не заполнено или массив пустой, приоритетного СЦ для данного сборочного задания нет",
            "items": {
              "type": "string"
            }
          },
          "offices": {
            "type": "array",
            "nullable": true,
            "description": "Список офисов, куда следует привезти товар",
            "items": {
              "type": "string",
              "example": "Калуга"
            }
          },
          "address": {
            "type": "object",
            "nullable": true,
            "description": "Детализованный адрес покупателя для доставки (если применимо). Некоторые из полей могут прийти пустыми из-за специфики адреса",
            "properties": {
              "province": {
                "type": "string",
                "nullable": false,
                "description": "Область",
                "example": "Челябинская область"
              },
              "area": {
                "type": "string",
                "nullable": false,
                "description": "Район",
                "example": "Челябинск"
              },
              "city": {
                "type": "string",
                "nullable": false,
                "description": "Город",
                "example": "Город"
              },
              "street": {
                "type": "string",
                "nullable": false,
                "description": "Улица",
                "example": "51-я улица Арабкира"
              },
              "home": {
                "type": "string",
                "nullable": false,
                "description": "Номер дома",
                "example": "10А"
              },
              "flat": {
                "type": "string",
                "nullable": false,
                "description": "Номер квартиры",
                "example": 42
              },
              "entrance": {
                "type": "string",
                "nullable": false,
                "description": "Подъезд",
                "example": 3
              },
              "longitude": {
                "type": "number",
                "format": "float64",
                "nullable": false,
                "description": "Координата долготы",
                "example": 44.519068
              },
              "latitude": {
                "type": "number",
                "format": "float64",
                "nullable": false,
                "description": "Координаты широты",
                "example": 40.20192
              }
            }
          },
          "user": {
            "type": "object",
            "nullable": true,
            "description": "Информация о покупателе (только для доставки силами продавца)",
            "properties": {
              "fio": {
                "type": "string",
                "nullable": false,
                "description": "ФИО"
              },
              "phone": {
                "type": "string",
                "nullable": false,
                "description": "Номер телефона"
              }
            }
          },
          "skus": {
            "type": "array",
            "nullable": false,
            "description": "Массив баркодов товара",
            "items": {
              "type": "string",
              "example": 6665956397512
            }
          },
          "price": {
            "type": "integer",
            "nullable": false,
            "description": "Цена в валюте продажи с учетом скидок в копейках. Код валюты продажи в поле currencyCode"
          },
          "convertedPrice": {
            "type": "integer",
            "nullable": false,
            "description": "Цена продажи с учетом скидок в копейках, сконвертированная в валюту страны продавца по курсу на момент создания сборочного задания. Предоставляется в информационных целях"
          },
          "currencyCode": {
            "type": "integer",
            "nullable": false,
            "description": "Код валюты продажи (ISO 4217)"
          },
          "convertedCurrencyCode": {
            "type": "integer",
            "nullable": false,
            "description": "Код валюты страны поставщика (ISO 4217)"
          },
          "orderUid": {
            "type": "string",
            "description": "Идентификатор транзакции для группировки сборочных заданий. Сборочные задания в одной корзине покупателя будут иметь одинаковый orderUID"
          },
          "deliveryType": {
            "type": "string",
            "nullable": false,
            "description": "Тип доставки: fbs - доставка на склад Wildberries, dbs - доставка силами продавца\n",
            "enum": [
              "dbs",
              "fbs"
            ]
          },
          "nmId": {
            "type": "integer",
            "nullable": false,
            "description": "Артикул товара в системе Wildberries"
          },
          "chrtId": {
            "type": "integer",
            "nullable": false,
            "description": "Идентификатор размера товара в системе Wildberries"
          },
          "article": {
            "type": "string",
            "nullable": false,
            "description": "Артикул продавца",
            "example": "one-ring-7548"
          },
          "isLargeCargo": {
            "type": "bool",
            "nullable": false,
            "description": "сКГТ-признак товара, на который был сделан заказ"
          }
        }
      },
      "SupplyOrder": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "nullable": false,
            "description": "Идентификатор сборочного задания в Маркетплейсе",
            "example": 13833711
          },
          "rid": {
            "type": "string",
            "nullable": false,
            "description": "Идентификатор сборочного задания в системе Wildberries",
            "example": "f884001e44e511edb8780242ac120002"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "nullable": false,
            "description": "Дата создания сборочного задания (RFC3339)",
            "example": "2022-10-05 19:44:43+03:00"
          },
          "warehouseId": {
            "type": "integer",
            "nullable": false,
            "description": "Идентификатор склада продавца, на который поступило сборочное задание",
            "example": 658434
          },
          "prioritySc": {
            "type": "array",
            "nullable": false,
            "description": "Массив приоритетных СЦ для доставки сборочного задания. Если поле не заполнено или массив пустой, приоритетного СЦ для данного сборочного задания нет",
            "items": {
              "type": "string"
            }
          },
          "offices": {
            "type": "array",
            "nullable": true,
            "description": "Список офисов, куда следует привезти товар",
            "items": {
              "type": "string",
              "example": "Калуга"
            }
          },
          "user": {
            "type": "object",
            "nullable": true,
            "description": "Информация о покупателе (только для доставки силами продавца)",
            "properties": {
              "fio": {
                "type": "string",
                "nullable": false,
                "description": "ФИО"
              },
              "phone": {
                "type": "string",
                "nullable": false,
                "description": "Номер телефона"
              }
            }
          },
          "skus": {
            "type": "array",
            "nullable": false,
            "description": "Массив баркодов товара",
            "items": {
              "type": "string",
              "example": 6665956397512
            }
          },
          "price": {
            "type": "integer",
            "nullable": false,
            "description": "Цена в валюте продажи с учетом скидок в копейках. Код валюты продажи в поле currencyCode"
          },
          "convertedPrice": {
            "type": "integer",
            "nullable": false,
            "description": "Цена продажи с учетом скидок в копейках, сконвертированная в рубли по курсу на момент создания сборочного задания. Предоставляется в информационных целях"
          },
          "currencyCode": {
            "type": "integer",
            "nullable": false,
            "description": "Код валюты продажи (ISO 4217)"
          },
          "convertedCurrencyCode": {
            "type": "integer",
            "nullable": false,
            "description": "Код валюты страны продавца (ISO 4217)"
          },
          "orderUid": {
            "type": "string",
            "description": "Идентификатор транзакции для группировки сборочных заданий. Сборочные задания в одной корзине покупателя будут иметь одинаковый orderUID"
          },
          "nmId": {
            "type": "integer",
            "nullable": false,
            "description": "Артикул товара в системе Wildberries"
          },
          "chrtId": {
            "type": "integer",
            "nullable": false,
            "description": "Идентификатор размера товара в системе Wildberries"
          },
          "article": {
            "type": "string",
            "nullable": false,
            "description": "Артикул продавца",
            "example": "one-ring-7548"
          },
          "isLargeCargo": {
            "type": "bool",
            "nullable": false,
            "description": "сКГТ-признак товара, на который был сделан заказ"
          }
        }
      },
      "suppliesIdRespBody": {
        "type": "object",
        "properties": {
          "additionalErrors": {
            "description": "Дополнительные ошибки.",
            "example": null
          },
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки.",
            "type": "boolean",
            "example": true
          },
          "errorText": {
            "description": "Описание ошибки.",
            "type": "string",
            "example": "Описание ошибки"
          }
        }
      },
      "suppliesIdRespBody2": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Флаг ошибки.",
            "type": "boolean",
            "example": true
          },
          "errorText": {
            "description": "Описание ошибки.",
            "type": "string",
            "example": "Описание ошибки"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки.",
            "example": null
          },
          "data": {
            "type": "object",
            "properties": {
              "failedOrders": {
                "description": "Список заказов, которые не удалось обработать.",
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "8423848"
                }
              }
            }
          }
        }
      },
      "respBodyStocks": {
        "type": "object",
        "properties": {
          "error": {
            "description": "Флаг ошибки.",
            "type": "boolean",
            "example": true
          },
          "errorText": {
            "description": "Описание ошибки.",
            "type": "string",
            "example": "string"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки.",
            "type": "object"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "deliveryAddressDetails": {
        "description": "Детализованный адрес клиента для доставки (если применимо). <br>Некоторые из полей могут прийти пустыми из-за специфики адреса.\n",
        "type": "object",
        "properties": {
          "province": {
            "description": "Область.",
            "type": "string",
            "example": "Челябинская область"
          },
          "area": {
            "description": "Район.",
            "type": "string",
            "example": "Челябинск"
          },
          "city": {
            "description": "Город.",
            "type": "string",
            "example": "Челябинск"
          },
          "street": {
            "description": "Улица.",
            "type": "string",
            "example": "51-я улица Арабкира"
          },
          "home": {
            "description": "Номер дома.",
            "type": "string",
            "example": "10А"
          },
          "flat": {
            "description": "Номер квартиры.",
            "type": "string",
            "example": "42"
          },
          "entrance": {
            "description": "Подъезд.",
            "type": "string",
            "example": "3"
          },
          "longitude": {
            "description": "Координата долготы.",
            "type": "number",
            "example": 44.519068
          },
          "latitude": {
            "description": "Координата широты.",
            "type": "number",
            "example": 40.20192
          }
        }
      },
      "userInfo": {
        "description": "Информация о клиенте.",
        "type": "object",
        "properties": {
          "userId": {
            "description": "Идентификатор пользователя.",
            "type": "integer",
            "example": 123
          },
          "fio": {
            "description": "ФИО.",
            "type": "string",
            "example": "Иванов Иван Иванович"
          },
          "phone": {
            "description": "Номер телефона.",
            "type": "string",
            "example": "79991112233"
          }
        }
      },
      "requestBodyStickers": {
        "type": "object",
        "properties": {
          "orderIds": {
            "description": "Идентификаторы сборочных заданий.",
            "type": "array",
            "items": {
              "type": "integer",
              "example": 8423848
            }
          }
        }
      },
      "responseBodyStickersError": {
        "type": "object",
        "properties": {
          "data": {
            "example": null
          },
          "error": {
            "description": "Флаг ошибки.",
            "type": "boolean",
            "example": true
          },
          "errorText": {
            "description": "Описание ошибки.",
            "type": "string",
            "example": "Текст ошибки"
          },
          "additionalErrors": {
            "description": "Дополнительные ошибки.",
            "type": "string",
            "example": "Текст ошибки"
          }
        }
      },
      "IncomesItem": {
        "type": "object",
        "properties": {
          "incomeId": {
            "type": "integer",
            "description": "Номер поставки"
          },
          "number": {
            "type": "string",
            "maxLength": 40,
            "description": "Номер УПД"
          },
          "date": {
            "type": "string",
            "format": "date",
            "description": "Дата поступления. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время обновления информации в сервисе. Это поле соответствует параметру `dateFrom` в запросе. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "supplierArticle": {
            "type": "string",
            "maxLength": 75,
            "description": "Артикул поставщика"
          },
          "techSize": {
            "type": "string",
            "maxLength": 30,
            "description": "Размер"
          },
          "barcode": {
            "type": "string",
            "maxLength": 30,
            "description": "Бар-код"
          },
          "quantity": {
            "type": "integer",
            "description": "Количество"
          },
          "totalPrice": {
            "type": "number",
            "description": "Цена из УПД"
          },
          "dateClose": {
            "type": "string",
            "format": "date",
            "description": "Дата принятия (закрытия) в WB. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "warehouseName": {
            "type": "string",
            "maxLength": 50,
            "description": "Название склада"
          },
          "nmId": {
            "type": "integer",
            "description": "Код WB"
          },
          "status": {
            "type": "string",
            "maxLength": 50,
            "enum": [
              "Принято"
            ],
            "description": "Текущий статус поставки"
          }
        }
      },
      "StocksItem": {
        "type": "object",
        "properties": {
          "lastChangeDate": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время обновления информации в сервисе. Это поле соответствует параметру `dateFrom` в запросе. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "supplierArticle": {
            "type": "string",
            "maxLength": 75,
            "description": "Артикул поставщика"
          },
          "techSize": {
            "type": "string",
            "maxLength": 30,
            "description": "Размер"
          },
          "barcode": {
            "type": "string",
            "maxLength": 30,
            "description": "Бар-код"
          },
          "quantity": {
            "type": "integer",
            "description": "Количество, доступное для продажи (сколько можно добавить в корзину)"
          },
          "isSupply": {
            "type": "boolean",
            "description": "Договор поставки"
          },
          "isRealization": {
            "type": "boolean",
            "description": "Договор реализации"
          },
          "quantityFull": {
            "type": "integer",
            "description": "Полное (непроданное) количество, которое числится за складом (= `quantity` + в пути)"
          },
          "warehouseName": {
            "type": "string",
            "maxLength": 50,
            "description": "Название склада"
          },
          "nmId": {
            "type": "integer",
            "description": "Код WB"
          },
          "subject": {
            "type": "string",
            "maxLength": 50,
            "description": "Предмет"
          },
          "category": {
            "type": "string",
            "maxLength": 50,
            "description": "Категория"
          },
          "daysOnSite": {
            "type": "integer",
            "description": "Количество дней на сайте"
          },
          "brand": {
            "type": "string",
            "maxLength": 50,
            "description": "Бренд"
          },
          "SCCode": {
            "type": "string",
            "maxLength": 50,
            "description": "Код контракта"
          },
          "Price": {
            "type": "number",
            "description": "Цена"
          },
          "Discount": {
            "type": "number",
            "description": "Скидка"
          }
        }
      },
      "OrdersItem": {
        "type": "object",
        "properties": {
          "gNumber": {
            "type": "string",
            "maxLength": 50,
            "description": "Номер заказа. Объединяет все позиции одного заказа."
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время заказа. Это поле соответствует параметру `dateFrom` в запросе, если параметр `flag=1`. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время обновления информации в сервисе. Это поле соответствует параметру `dateFrom` в запросе, если параметр `flag=0` или не указан. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "supplierArticle": {
            "type": "string",
            "maxLength": 75,
            "description": "Артикул поставщика"
          },
          "techSize": {
            "type": "string",
            "maxLength": 30,
            "description": "Размер"
          },
          "barcode": {
            "type": "string",
            "maxLength": 30,
            "description": "Бар-код"
          },
          "totalPrice": {
            "type": "number",
            "description": "Цена до согласованной итоговой скидки/промо/спп. Для получения цены со скидкой можно воспользоваться формулой `priceWithDiscount = totalPrice * (1 - discountPercent/100)`"
          },
          "discountPercent": {
            "type": "integer",
            "description": "Согласованный итоговый дисконт. Будучи примененным к `totalPrice`, даёт сумму к оплате."
          },
          "warehouseName": {
            "type": "string",
            "maxLength": 50,
            "description": "Название склада отгрузки"
          },
          "oblast": {
            "type": "string",
            "maxLength": 200,
            "description": "Область"
          },
          "incomeID": {
            "type": "integer",
            "description": "Номер поставки (от продавца на склад)"
          },
          "odid": {
            "type": "integer",
            "description": "Уникальный идентификатор позиции заказа. Может использоваться для поиска соответствия между заказами и продажами."
          },
          "nmId": {
            "type": "integer",
            "description": "Код WB"
          },
          "subject": {
            "type": "string",
            "maxLength": 50,
            "description": "Предмет"
          },
          "category": {
            "type": "string",
            "maxLength": 50,
            "description": "Категория"
          },
          "brand": {
            "type": "string",
            "maxLength": 50,
            "description": "Бренд"
          },
          "isCancel": {
            "type": "boolean",
            "description": "Отмена заказа. true - заказ отменен до оплаты."
          },
          "cancel_dt": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время отмены заказа. Если заказ не был отменен, то `\"0001-01-01T00:00:00\"`. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "sticker": {
            "type": "string",
            "description": "Цифровое значение стикера, который клеится на товар в процессе сборки заказа по системе Маркетплейс."
          },
          "srid": {
            "type": "string",
            "description": "Уникальный идентификатор заказа, функционально аналогичный `odid`/`rid`.  Данный параметр введен в июле'22 и в течение переходного периода может быть заполнен не во всех ответах. Примечание для работающих по системе Маркетплейс: `srid` равен `rid` в ответе на метод `GET /api/v2/orders`.\n"
          }
        }
      },
      "SalesItem": {
        "type": "object",
        "properties": {
          "gNumber": {
            "type": "string",
            "maxLength": 50,
            "description": "Номер заказа. Объединяет все позиции одного заказа."
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время продажи. Это поле соответствует параметру `dateFrom` в запросе, если параметр `flag=1`. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "lastChangeDate": {
            "type": "string",
            "format": "date-time",
            "description": "Дата и время обновления информации в сервисе. Это поле соответствует параметру `dateFrom` в запросе, если параметр `flag=0` или не указан. Если часовой пояс не указан, то берется Московское время UTC+3."
          },
          "supplierArticle": {
            "type": "string",
            "maxLength": 75,
            "description": "Артикул поставщика"
          },
          "techSize": {
            "type": "string",
            "maxLength": 30,
            "description": "Размер"
          },
          "barcode": {
            "type": "string",
            "maxLength": 30,
            "description": "Бар-код"
          },
          "totalPrice": {
            "type": "number",
            "description": "Цена до согласованной скидки/промо/спп. Для получения цены со скидкой можно воспользоваться формулой `priceWithDiscount = totalPrice * (1 - discountPercent/100)`"
          },
          "discountPercent": {
            "type": "integer",
            "description": "Согласованный итоговый дисконт"
          },
          "isSupply": {
            "type": "boolean",
            "description": "Договор поставки"
          },
          "isRealization": {
            "type": "boolean",
            "description": "Договор реализации"
          },
          "promoCodeDiscount": {
            "type": "number",
            "description": "Скидка по промокоду"
          },
          "warehouseName": {
            "type": "string",
            "maxLength": 50,
            "description": "Название склада отгрузки"
          },
          "countryName": {
            "type": "string",
            "maxLength": 200,
            "description": "Страна"
          },
          "oblastOkrugName": {
            "type": "string",
            "maxLength": 200,
            "description": "Округ"
          },
          "regionName": {
            "type": "string",
            "maxLength": 200,
            "description": "Регион"
          },
          "incomeID": {
            "type": "integer",
            "description": "Номер поставки (от продавца на склад)"
          },
          "saleID": {
            "type": "string",
            "maxLength": 15,
            "description": "Уникальный идентификатор продажи/возврата. <ul>  <li> `SXXXXXXXXXX` — продажа  <li> `RXXXXXXXXXX` — возврат  <li> `DXXXXXXXXXXX` — доплата <li> `AXXXXXXXXX` – сторно продаж (все значения полей как у продажи, но поля с суммами и кол-вом с минусом как в возврате) <li> `BXXXXXXXXX` - сторно возврата (все значения полей как у возврата, но поля с суммами и кол-вом с плюсом, в противоположность возврату) </ul>\n"
          },
          "odid": {
            "type": "integer",
            "description": "Уникальный идентификатор позиции заказа. Может использоваться для поиска соответствия между заказами и продажами."
          },
          "spp": {
            "type": "number",
            "description": "Согласованная скидка постоянного покупателя"
          },
          "forPay": {
            "type": "number",
            "description": "К перечислению поставщику"
          },
          "finishedPrice": {
            "type": "number",
            "description": "Фактическая цена заказа с учетом всех скидок"
          },
          "priceWithDisc": {
            "type": "number",
            "description": "Цена, от которой считается вознаграждение поставщика `forpay` (с учетом всех согласованных скидок)"
          },
          "nmId": {
            "type": "integer",
            "description": "Код WB"
          },
          "subject": {
            "type": "string",
            "maxLength": 50,
            "description": "Предмет"
          },
          "category": {
            "type": "string",
            "maxLength": 50,
            "description": "Категория"
          },
          "brand": {
            "type": "string",
            "maxLength": 50,
            "description": "Бренд"
          },
          "isStorno": {
            "type": "integer",
            "description": "Для сторно-операций `1`, для остальных `0`"
          },
          "sticker": {
            "type": "string",
            "description": "Цифровое значение стикера, который клеится на товар в процессе сборки заказа по системе Маркетплейс."
          },
          "srid": {
            "type": "string",
            "description": "Уникальный идентификатор заказа, функционально аналогичный `odid`/`rid`.  Данный параметр введен в июле'22 и в течение переходного периода может быть заполнен не во всех ответах. Примечание для работающих по системе Маркетплейс: `srid` равен `rid` в ответе на метод `GET /api/v2/orders`.\n"
          }
        }
      },
      "DetailReportItem": {
        "type": "object",
        "properties": {
          "realizationreport_id": {
            "example": 1234567,
            "type": "integer",
            "description": "Номер отчёта"
          },
          "date_from": {
            "example": "2022-10-17T00:00:00Z",
            "type": "string",
            "format": "date-time",
            "description": "Дата начала отчётного периода"
          },
          "date_to": {
            "example": "2022-10-23T00:00:00Z",
            "type": "string",
            "format": "date-time",
            "description": "Дата конца отчётного периода"
          },
          "create_dt": {
            "example": "2022-10-24T14:40:32",
            "type": "string",
            "format": "date-time",
            "description": "Дата формирования отчёта"
          },
          "suppliercontract_code": {
            "example": null,
            "type": "object",
            "description": "Договор"
          },
          "rrd_id": {
            "example": 1232610467,
            "type": "integer",
            "description": "Номер строки"
          },
          "gi_id": {
            "example": 123456,
            "type": "integer",
            "description": "Номер поставки"
          },
          "subject_name": {
            "example": "Мини-печи",
            "type": "string",
            "description": "Предмет"
          },
          "nm_id": {
            "example": 1234567,
            "type": "integer",
            "description": "Артикул"
          },
          "brand_name": {
            "example": "BlahBlah",
            "type": "string",
            "description": "Бренд"
          },
          "sa_name": {
            "example": "MAB123",
            "type": "string",
            "description": "Артикул продавца"
          },
          "ts_name": {
            "example": "0",
            "type": "string",
            "description": "Размер"
          },
          "barcode": {
            "example": "1231312352310",
            "type": "string",
            "description": "Баркод"
          },
          "doc_type_name": {
            "example": "Продажа",
            "type": "string",
            "description": "Тип документа"
          },
          "quantity": {
            "type": "integer",
            "example": 1,
            "description": "Количество"
          },
          "retail_price": {
            "example": 1249,
            "type": "number",
            "description": "Цена розничная"
          },
          "retail_amount": {
            "example": 367,
            "type": "number",
            "description": "Сумма продаж (возвратов)"
          },
          "sale_percent": {
            "example": 68,
            "type": "integer",
            "description": "Согласованная скидка"
          },
          "commission_percent": {
            "example": 0.1324,
            "type": "number",
            "description": "Процент комиссии"
          },
          "office_name": {
            "example": "Коледино",
            "type": "string",
            "description": "Склад"
          },
          "supplier_oper_name": {
            "example": "Продажа",
            "type": "string",
            "description": "Обоснование для оплаты"
          },
          "order_dt": {
            "example": "2022-10-13T00:00:00Z",
            "type": "string",
            "format": "date-time",
            "description": "Дата заказа. <br> Присылается с явным указанием часового пояса"
          },
          "sale_dt": {
            "example": "2022-10-20T00:00:00Z",
            "type": "string",
            "format": "date-time",
            "description": "Дата продажи. <br> Присылается с явным указанием часового пояса"
          },
          "rr_dt": {
            "example": "2022-10-20T00:00:00Z",
            "type": "string",
            "format": "date-time",
            "description": "Дата операции. <br> Присылается с явным указанием часового пояса"
          },
          "shk_id": {
            "example": 1239159661,
            "type": "integer",
            "description": "Штрих-код"
          },
          "retail_price_withdisc_rub": {
            "example": 399.68,
            "type": "number",
            "description": "Цена розничная с учетом согласованной скидки"
          },
          "delivery_amount": {
            "example": 0,
            "type": "integer",
            "description": "Количество доставок"
          },
          "return_amount": {
            "example": 0,
            "type": "integer",
            "description": "Количество возвратов"
          },
          "delivery_rub": {
            "example": 0,
            "type": "number",
            "description": "Стоимость логистики"
          },
          "gi_box_type_name": {
            "example": "Монопалета",
            "type": "string",
            "description": "Тип коробов"
          },
          "product_discount_for_report": {
            "example": 399.68,
            "type": "number",
            "description": "Согласованный продуктовый дисконт"
          },
          "supplier_promo": {
            "example": 0,
            "type": "number",
            "description": "Промокод"
          },
          "rid": {
            "example": 123722249253,
            "type": "integer",
            "description": "Уникальный идентификатор заказа"
          },
          "ppvz_spp_prc": {
            "example": 0.1581,
            "type": "number",
            "description": "Скидка постоянного покупателя"
          },
          "ppvz_kvw_prc_base": {
            "example": 0.15,
            "type": "number",
            "description": "Размер кВВ без НДС, % базовый"
          },
          "ppvz_kvw_prc": {
            "example": -0.0081,
            "type": "number",
            "description": "Итоговый кВВ без НДС, %"
          },
          "ppvz_sales_commission": {
            "example": -3.74,
            "type": "number",
            "description": "Вознаграждение с продаж до вычета услуг поверенного, без НДС"
          },
          "ppvz_for_pay": {
            "example": 376.99,
            "type": "number",
            "description": "К перечислению продавцу за реализованный товар"
          },
          "ppvz_reward": {
            "example": 0,
            "type": "number",
            "description": "Возмещение за выдачу и возврат товаров на ПВЗ"
          },
          "acquiring_fee": {
            "example": 14.89,
            "type": "number",
            "description": "Возмещение расходов по эквайрингу. <br>Расходы WB на услуги эквайринга: вычитаются из вознаграждения WB и не влияют на доход продавца\n"
          },
          "acquiring_bank": {
            "example": "Тинькофф",
            "type": "string",
            "description": "Наименование банка, предоставляющего услуги эквайринга"
          },
          "ppvz_vw": {
            "example": -3.74,
            "type": "number",
            "description": "Вознаграждение WB без НДС"
          },
          "ppvz_vw_nds": {
            "example": -0.75,
            "type": "number",
            "description": "НДС с вознаграждения WB"
          },
          "ppvz_office_id": {
            "example": 105383,
            "type": "integer",
            "description": "Номер офиса"
          },
          "ppvz_office_name": {
            "example": "Пункт самовывоза (ПВЗ)",
            "type": "string",
            "description": "Наименование офиса доставки"
          },
          "ppvz_supplier_id": {
            "example": 186465,
            "type": "integer",
            "description": "Номер партнера"
          },
          "ppvz_supplier_name": {
            "example": "ИП Жасмин",
            "type": "string",
            "description": "Партнер"
          },
          "ppvz_inn": {
            "example": "010101010101",
            "type": "string",
            "description": "ИНН партнера"
          },
          "declaration_number": {
            "example": "",
            "type": "string",
            "description": "Номер таможенной декларации"
          },
          "bonus_type_name": {
            "example": "Штраф МП. Невыполненный заказ (отмена клиентом после недовоза)",
            "type": "string",
            "description": "Обоснование штрафов и доплат. <br> Поле будет в ответе при наличии значения в поле `penalty` или в поле `additional_payment`\n"
          },
          "sticker_id": {
            "example": "1964038895",
            "type": "string",
            "description": "Цифровое значение стикера, который клеится на товар в процессе сборки заказа по схеме \"Маркетплейс\""
          },
          "site_country": {
            "example": "RU",
            "type": "string",
            "description": "Страна продажи"
          },
          "penalty": {
            "example": 231.35,
            "type": "number",
            "description": "Штрафы"
          },
          "additional_payment": {
            "example": 0,
            "type": "number",
            "description": "Доплаты"
          },
          "kiz": {
            "example": "0102900000376311210G2CIS?ehge)S\u001d91002A\u001d92F9Qof4FDo/31Icm14kmtuVYQzLypxm3HWkC1vQ/+pVVjm1dNAth1laFMoAGn7yEMWlTjxIe7lQnJqZ7TRZhlHQ==",
            "type": "string",
            "description": "Код маркировки. <br> Поле будет в ответе при наличии значения\n"
          },
          "srid": {
            "example": "711ab8cb94e040f98b3804e5f331bf7a_r",
            "type": "string",
            "description": "Уникальный идентификатор заказа. Примечание для использующих API Marketplace: `srid` равен `rid` в ответах методов сборочных заданий.\n"
          }
        }
      },
      "ExcItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Внутренний код операции"
          },
          "finishedPrice": {
            "type": "number",
            "description": "Цена товара с учетом НДС"
          },
          "operationTypeId": {
            "type": "integer",
            "description": "Тип операции (`1` - продажа, `2` - возврат)"
          },
          "fiscalDt": {
            "type": "string",
            "format": "date-time",
            "description": "Время фискализации. Передается с указанием часового пояса."
          },
          "docNumber": {
            "type": "integer",
            "description": "Номер фискального документа"
          },
          "fnNumber": {
            "type": "string",
            "description": "Номер фискального накопителя"
          },
          "regNumber": {
            "type": "string",
            "description": "Регистрационный номер ККТ"
          },
          "excise": {
            "type": "string",
            "description": "Акциз (он же киз)"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Дата появления данных в системе. Передается с указанием часового пояса."
          }
        }
      }
    },
    "examples": {
      "IncorrectRequestBody": {
        "value": {
          "code": "IncorrectRequestBody",
          "message": "Некорректное тело запроса"
        }
      },
      "IncorrectRequest": {
        "value": {
          "code": "IncorrectRequest",
          "message": "Переданы некорректные данные"
        }
      },
      "IncorrectParameter": {
        "value": {
          "code": "IncorrectParameter",
          "message": "Передан некорректный параметр"
        }
      },
      "SupplyHasOrders": {
        "value": {
          "code": "SupplyHasOrders",
          "message": "Не удалось обработать поставку. Убедитесь, что за ней не осталось закреплённых сборочных заданий."
        }
      },
      "SupplyHasZeroOrders": {
        "value": {
          "code": "SupplyHasZeroOrders",
          "message": "Не удалось обработать поставку. Убедитесь, что за ней закреплён хотя бы одно сборочное задание."
        }
      },
      "SupplyNotClosed": {
        "value": {
          "code": "SupplyNotClosed",
          "message": "Поставка не передана в доставку"
        }
      },
      "FailedToAddSupplyOrder": {
        "value": {
          "code": "FailedToAddSupplyOrder",
          "message": "Не удалось закрепить сборочное задание за поставкой. Убедитесь, что сборочное задание и поставка удовлетворяют всем необходимым требованиям."
        }
      },
      "StatusMismatch": {
        "value": {
          "code": "StatusMismatch",
          "message": "Несоответствие статусов, проверьте их правильность"
        }
      },
      "StatusChangeNotAllowed": {
        "value": {
          "code": "StatusChangeNotAllowed",
          "message": "Задание перейдёт в завершенные после сканирования на ПВЗ"
        }
      },
      "SgtinNotRequired": {
        "value": {
          "code": "SgtinNotRequired",
          "message": "Для данной продукции КиЗ не требуется"
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "Запрашиваемый ресурс не найден",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "NotFound",
              "message": "Не найдено"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Пользователь на авторизован",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "Unauthorized",
              "message": "Пользователь на авторизован"
            }
          }
        }
      },
      "AccessDenied": {
        "description": "Доступ запрещён",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "AccessDenied",
              "message": "Доступ запрещён"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Внутренняя ошибка сервиса",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": "InternalServerError",
              "message": "Внутренняя ошибка сервиса"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Цены"
    },
    {
      "name": "Промокоды и скидки"
    },
    {
      "name": "Контент / Загрузка",
      "description": "Создание и редактирование КТ <dl> <dt>Словарь сокращений:</dt> <dd>КТ - карточка товара</dd> <dd>НМ - номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>\n<br> Публичное API Контента создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br> Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br> `Не допускается использование API Контента в качестве внешней базы данных. При превышении лимитов на запросы доступ к API будет ограничен`.\n"
    },
    {
      "name": "Контент / Просмотр",
      "description": "Получение информации о созданных КТ, НМ и размерах <dl> <dt>Словарь сокращений:</dt> <dd>КТ - карточка товара</dd> <dd>НМ - номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>\n"
    },
    {
      "name": "Контент / Конфигуратор",
      "description": "Конфигуратор <dl> <dt>Словарь сокращений:</dt> <dd>КТ - карточка товара</dd> <dd>НМ - номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>\n"
    },
    {
      "name": "Контент / Медиафайлы",
      "description": "Работа с медиафайлами <dl> <dt>Словарь сокращений:</dt> <dd>КТ - карточка товара</dd> <dd>НМ - номенклатура</dd> </dl> Ограничения по количеству запросов: <dd>Допускается максимум 100 запросов в минуту на методы контента в целом.</dd>\n"
    },
    {
      "name": "Marketplace / Сборочные задания",
      "description": "Публичное API Marketplace создано для синхронизации данных между серверами Wildberries и серверами продавцов. <br>Вы загружаете данные на свои носители, работаете с ними на своих мощностях и синхронизируетесь с нашими серверами по мере необходимости. <br>Допускается <b>максимум 300 запросов в минуту</b> на методы Marketplace в целом. <br>`Не допускается использование API Marketplace в качестве внешней базы данных.`\n<dl> <dt>Словарь сокращений:</dt> <dd>ПВЗ - пункт выдачи заказов</dd> <dd>КИЗ - контрольный идентификационный знак</dd> <dd>ИС \"МДЛП\" - информационная система мониторинга движения лекарственных препаратов</dd> <dd>СЦ - сортировочный центр</dd> </dl>\nОписание основных ошибок в Marketplace: <table>\n  <tr>\n    <td>Код</td>\n    <td>Описание</td>\n  </tr>\n  <tr>\n    <td>InternalServerError</td>\n    <td>Внутренняя ошибка сервера</td>\n  </tr>\n  <tr>\n    <td>Unauthorized</td>\n    <td>Пользователь не авторизован</td>\n  </tr>\n  <tr>\n    <td>AccessDenied</td>\n    <td>Доступ запрещён</td>\n  </tr>\n  <tr>\n    <td>IncorrectRequestBody</td>\n    <td>Некорректное тело запроса</td>\n  </tr>\n  <tr>\n    <td>IncorrectRequest</td>\n    <td>Переданы некорректные данные</td>\n  </tr>\n  <tr>\n    <td>NotFound</td>\n    <td>Не найдено</td>\n  </tr>\n  <tr>\n    <td>UploadDataLimit</td>\n    <td>Превышен лимит загружаемых данных</td>\n  </tr>\n  <tr>\n    <td>SubjectDBSRestriction</td>\n    <td>Категория товара недоступна для продажи по схеме 'Везу на склад Wildberries'</td>\n  </tr>\n  <tr>\n    <td>SubjectFBSRestriction</td>\n    <td>Категория товара недоступна для продажи по схеме 'Везу самостоятельно до покупателя'</td>\n  </tr>\n  <tr>\n    <td>CargoWarehouseRestriction</td>\n    <td>Выбранный склад не предназначен для крупногабаритных товаров. Добавьте их на соответствующий склад</td>\n  </tr>\n  <tr>\n    <td>IncorrectParameter</td>\n    <td>Передан некорректный параметр</td>\n  </tr>\n  <tr>\n    <td>SupplyHasOrders</td>\n    <td>Не удалось обработать поставку. Убедитесь, что за ней не осталось закреплённых сборочных заданий</td>\n  </tr>\n  <tr>\n    <td>SupplyHasZeroOrders</td>\n    <td>Не удалось обработать поставку. Убедитесь, что за ней закреплено хотя бы одно сборочное задание</td>\n  </tr>\n  <tr>\n    <td>FailedToAddSupplyOrder</td>\n    <td>Не удалось закрепить сборочное задание за поставкой. Убедитесь, что сборочное задание и поставка удовлетворяют всем необходимым требованиям</td>\n  </tr>\n  <tr>\n    <td>StatusChangeNotAllowed</td>\n    <td>Задание перейдёт в завершенные после сканирования на ПВЗ</td>\n  </tr>\n  <tr>\n    <td>StatusMismatch</td>\n    <td>Несоответствие статусов, проверьте их правильность</td>\n  </tr>\n  <tr>\n    <td>SgtinNotRequired</td>\n    <td>Для данной продукции КиЗ не требуется</td>\n  </tr>\n  <tr>\n    <td>SupplyNotClosed</td>\n    <td>Поставка не передана в доставку</td>\n  </tr>\n</table>\n"
    },
    {
      "name": "Marketplace / Остатки",
      "description": "Допускается <b>максимум 300 запросов в минуту</b> на методы Marketplace в целом"
    },
    {
      "name": "Marketplace / Deprecated",
      "description": "\n<h2><div class=\"warning\">Данные методы будут доступны до 31 января 2023 года</div></h2>\n"
    },
    {
      "name": "Статистика",
      "description": "Методы статистики <br><b>Лимит по запросам:</b> один запрос одного метода по одному токену в одну минуту. <br><br> <a href=\"./excel/stat-excel.html\">Инструкция: Сохранение статистики в Excel</a>\n"
    },
    {
      "name": "Реклама",
      "description": "<dl> <dt>Словарь сокращений:</dt> <dd>РК - рекламная кампания</dd> </dl>\nСинхронизация данных из бд происходит раз в 3 минуты.  <br>Изменение статуса происходит раз в 1 минуту. Внутри этого интервала будет сохранено последнее действие по изменению статуса. <br>Изменение ставки происходит раз в 30 секунд. Внутри этого интервала будет сохранено последнее действие по изменению ставки.\n"
    }
  ],
  "paths": {
    "/public/api/v1/info": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "description": "Получение информации по номенклатурам, их ценам, скидкам и промокодам. Если не указывать фильтры, вернётся весь товар.",
        "summary": "Получение информации о ценах.",
        "tags": [
          "Цены"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/quantity"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о ценах",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nmId": {
                      "type": "integer",
                      "description": "Номенклатура",
                      "example": 1234567
                    },
                    "price": {
                      "type": "number",
                      "description": "Цена",
                      "example": 1000
                    },
                    "discount": {
                      "type": "integer",
                      "description": "Скидка",
                      "example": 10
                    },
                    "promoCode": {
                      "type": "number",
                      "description": "Промокод",
                      "example": 5
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/api/v1/prices": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Загрузка цен",
        "description": "Загрузка цен. За раз можно загрузить не более 1000 номенклатур.",
        "tags": [
          "Цены"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "nmId": {
                      "type": "integer",
                      "description": "Номенклатура",
                      "example": 1234567
                    },
                    "price": {
                      "type": "number",
                      "description": "Цена (указывать без копеек)",
                      "example": 1000
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Цены успешно отправлены."
          }
        }
      }
    },
    "/public/api/v1/updateDiscounts": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "description": "Установка скидок для номенклатур. Максимальное количество номенклатур на запрос - 1000",
        "summary": "Установка скидок",
        "tags": [
          "Промокоды и скидки"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/activateFrom"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/NomenclatureArray"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/public/api/v1/revokeDiscounts": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Промокоды и скидки"
        ],
        "description": "Сброс скидок для номенклатур. При первом запросе ответ будет пустым. При повторной попытке сбросить скидку вернет JSON с id первичного запроса.",
        "summary": "Сброс скидок для номенклатур",
        "requestBody": {
          "required": true,
          "description": "Перечень номенклатур к отмене скидок",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "example": [
                  12345678,
                  81234567
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "uploadId": {
                      "type": "integer",
                      "description": "Номер запроса на сброс скидки"
                    },
                    "alreadyExists": {
                      "type": "boolean",
                      "description": "Данное поле обозначает что скидка уже была сброшена"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/public/api/v1/updatePromocodes": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Промокоды и скидки"
        ],
        "description": "Установка промокодов для номенклатур. Максимальное количество номенклатур на запрос - 1000",
        "summary": "Установка промокодов для номенклатур",
        "parameters": [
          {
            "description": "Дата активации промокада в формате `YYYY-MM-DD` или `YYYY-MM-DD HH:MM:SS`. Если не указывать, промокод начнет действовать сразу",
            "in": "query",
            "name": "activateFrom",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/NomenclatureArray2"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/public/api/v1/revokePromocodes": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Промокоды и скидки"
        ],
        "description": "Сброс промокодов для номенклатур",
        "summary": "Сброс промокодов для номенклатур",
        "requestBody": {
          "required": true,
          "description": "Перечень номенклатур к отмене промокодов",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "example": [
                  12345678,
                  81234567
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/update": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Редактирование КТ",
        "description": "Метод позволяет отредактировать несколько карточек за раз. <br> Редактирование КТ происходит асинхронно, после отправки запрос становится в очередь на обработку. <br> `Важно`: Баркоды (skus) не подлежат удалению или замене. Попытка заменить существующий баркод приведет к добавлению нового баркода к существующему. <br> Если запрос прошел успешно, а информация в карточке не обновилась, значит были допущены ошибки и карточка попала в \"Черновики\" (метод `cards/error/list`) с описанием ошибок.  <br>Необходимо исправить ошибки в запросе и отправить его повторно. <br> <br> Для успешного обновления карточки рекомендуем Вам придерживаться следующего порядка действий: <br> 1. Сначала существующую карточку необходимо запросить методом cards/filter. <br> 2. Забираем из ответа массив data. <br> 3. В этом массиве вносим необходимые изменения и отправляем его в cards/update\n",
        "tags": [
          "Контент / Загрузка"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "imtID": {
                      "description": "Идентификатор карточки товара",
                      "type": "integer",
                      "example": 85792498
                    },
                    "nmID": {
                      "description": "Числовой идентификатор номенклатуры Wildberries",
                      "type": "integer",
                      "example": 66964219
                    },
                    "vendorCode": {
                      "description": "Вендор код, текстовый идентификатор номенклатуры поставщика",
                      "type": "string",
                      "example": "6000000001"
                    },
                    "sizes": {
                      "description": "Массив размеров для номенклатуры (для безразмерного товара все равно нужно передавать данный массив с одним элементом и нулевым размером, но с ценой и баркодом)",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "techSize": {
                            "description": "Размер поставщика (пример S, M, L, XL, 42, 42-43)",
                            "type": "string",
                            "example": "40-41"
                          },
                          "chrtID": {
                            "description": "Числовой идентификатор размера для данной номенклатуры Wildberries",
                            "type": "integer",
                            "example": 116108635
                          },
                          "wbSize": {
                            "description": "Рос. размер",
                            "type": "string",
                            "example": "40-41"
                          },
                          "price": {
                            "description": "Цена",
                            "type": "integer",
                            "example": 3999
                          },
                          "skus": {
                            "description": "Массив баркодов, строковых идентификаторов размеров поставщика (их можно сгенерировать с помощью API, см. Viewer)",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "1000000001"
                            }
                          }
                        }
                      }
                    },
                    "characteristics": {
                      "description": "Массив характеристик, индивидуальный для каждой категории",
                      "type": "array",
                      "items": {
                        "type": "object"
                      },
                      "example": [
                        {
                          "ТНВЭД": [
                            "6403993600"
                          ]
                        },
                        {
                          "Пол": [
                            "Мужской"
                          ]
                        },
                        {
                          "Цвет": [
                            "зеленый"
                          ]
                        },
                        {
                          "Предмет": [
                            "Блузки"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/upload": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Создание  КТ",
        "description": "Создание карточки товара происходит асинхронно, при отправке запроса на создание КТ ваш запрос становится в очередь на создание КТ. <br>`ПРИМЕЧАНИЕ`: Карточка товара считается `созданной`, если успешно создалась хотя бы одна `НМ`. <br>`ВАЖНО`: Если во время обработки запроса в очереди выявляются ошибки, то НМ считается ошибочной. <br>Если запрос на создание прошел успешно, а карточка не создалась, то необходимо в первую очередь проверить наличие карточки в методе `cards/error/list`. Если карточка попала в ответ к этому методу, то необходимо исправить описанные ошибки в запросе на создание карточки и отправить его повторно.\n",
        "tags": [
          "Контент / Загрузка"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "description": "Массив карточек товаров на создание",
                "items": {
                  "type": "array",
                  "description": "Массив номенклатур на создаваемую карточку товара",
                  "items": {
                    "type": "object",
                    "properties": {
                      "vendorCode": {
                        "description": "Артикул новой НМ которую хотим создать в КТ",
                        "type": "string",
                        "example": "6000000002"
                      },
                      "characteristics": {
                        "description": "Массив характеристик, индивидуальный для каждой категории",
                        "type": "array",
                        "items": {
                          "type": "object"
                        },
                        "example": [
                          {
                            "ТНВЭД": [
                              "6403993600"
                            ]
                          },
                          {
                            "Пол": [
                              "Мужской"
                            ]
                          },
                          {
                            "Стилистика": [
                              "casual"
                            ]
                          },
                          {
                            "Предмет": "Платья"
                          }
                        ]
                      },
                      "sizes": {
                        "description": "Массив размеров для номенклатуры (для безразмерного товара все равно нужно передавать данный массив с одним элементом и пустым Рос. размером, но с ценой и баркодом)",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "techSize": {
                              "description": "Размер поставщика (пример S, M, L, XL, 42, 42-43)",
                              "type": "string",
                              "example": "40-41"
                            },
                            "wbSize": {
                              "description": "Рос. размер",
                              "type": "string",
                              "example": ""
                            },
                            "price": {
                              "description": "Цена (`указывается в рублях`)",
                              "type": "integer",
                              "example": 3999
                            },
                            "skus": {
                              "description": "Массив баркодов, строковых идентификаторов размеров поставщика (их можно сгенерировать с помощью API, см. Viewer)",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "1000000001"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/upload/add": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Добавление НМ к КТ",
        "description": "Метод позволяет добавить к карточке товара новую номенклатуру. <br>Добавление НМ к КТ происходит асинхронно, после отправки запрос становится в очередь на обработку. <br>`Важно`: Если после успешной отправки запроса номенклатура не создалась, то необходимо проверить раздел \"Список несозданных НМ с ошибками\". Для того чтобы убрать НМ из ошибочных, необходимо повторно сделать запрос с исправленными ошибками.\n",
        "tags": [
          "Контент / Загрузка"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vendorCode": {
                    "description": "Артикул существующей НМ в КТ",
                    "type": "string",
                    "example": "6000000001"
                  },
                  "cards": {
                    "description": "Массив НМ которые хотим добавить к КТ",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "vendorCode": {
                          "description": "Артикул новой НМ которую хотим создать в КТ",
                          "type": "string",
                          "example": "6000000002"
                        },
                        "characteristics": {
                          "description": "Массив характеристик, индивидуальный для каждой категории",
                          "type": "array",
                          "items": {
                            "type": "object"
                          },
                          "example": [
                            {
                              "ТНВЭД": [
                                "6403993600"
                              ]
                            },
                            {
                              "Цвет": [
                                "желтый"
                              ]
                            },
                            {
                              "Сезон": [
                                "лето"
                              ]
                            },
                            {
                              "Предмет": "Платья"
                            }
                          ]
                        },
                        "sizes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "techSize": {
                                "description": "Размер поставщика (пример S, M, L, XL, 42, 42-43)",
                                "type": "string",
                                "example": "40-41"
                              },
                              "wbSize": {
                                "description": "Рос. размер",
                                "type": "string",
                                "example": "40-41"
                              },
                              "price": {
                                "description": "Цена",
                                "type": "integer",
                                "example": 3999
                              },
                              "skus": {
                                "description": "Массив баркодов, строковых идентификаторов размеров поставщика (их можно сгенерировать с помощью API, см. Viewer)",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "1000000001"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/cursor/list": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список НМ v2",
        "description": "Метод позволяет получить список созданых НМ по фильтру (баркод, вендор код, номер номенклатуры) с пагинацией и сортировкой. <br> <br>Порядок работы с `cursor/list`: <br> Чтобы получить полный список номенклатур, <b>если их > 1000</b>, необходимо воспользоваться пагинацией.\n  <ol>\n    <li>Cделать первый запрос (все указанные ниже параметры обязательны):\n      <br>\n      <code>{</code>\n      <ul>\n        <l><code>\"sort\": {</code></li>\n        \t<ul>\n            <l><code>\"cursor\": {</code></li>\n              <ul>\n                <l><code>\"limit\": 1000</code></li>\n              </ul>\n            <l><code>},</code></li>\n          </ul>\n          <ul>\n            <l><code>\"filter\": {</code></li>\n              <ul>\n                <l><code>\"withPhoto\": -1</code></li>\n              </ul>\n            <l><code>}</code></li>\n          </ul>\n        <l><code>}</code></li>\n      </ul>\n      <code>}</code>\n      <br>По желанию можно добавить поиск по <code>\"textSearch\"</code> и сортировку.\n      <br><code>\"sort\": {</code>\n        <dd><code>\"sortColumn\": \"\",</code></dd>\n        <dd><code>\"ascending\": false</code></dd>\n      <code>}</code>\n    </li>\n    <li>Пройти в конец полученного списка номенклатур, скопировать из <code>cursor</code> две строки:\n      <ul>\n        <li><code>\"updatedAt\": \"***\",</code></li>\n        <li><code>\"nmID\": ***,</code></li>\n      </ul>\n    <li>Вставить скопированные строки в <code>cursor</code> запроса, повторить вызов метода. </li>\n    <li>Повторять пункты <b>2</b> и <b>3</b>, пока <code>total</code> в ответе не станет меньше чем <code>limit</code> в запросе.\n      <br>Это будет означать, что Вы получили все карточки.\n  </ol>\n",
        "tags": [
          "Контент / Просмотр"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sort": {
                    "type": "object",
                    "properties": {
                      "cursor": {
                        "type": "object",
                        "properties": {
                          "updatedAt": {
                            "description": "Время обновления последней КТ из предыдущего ответа на запрос списка КТ.",
                            "type": "string",
                            "example": "2022-09-23T17:41:32Z"
                          },
                          "nmID": {
                            "description": "Номенклатура последней КТ из предыдущего ответа на запрос списка КТ.",
                            "type": "integer",
                            "example": 66965444
                          },
                          "limit": {
                            "description": "Кол-во запрашиваемых КТ.",
                            "type": "integer",
                            "example": 1000
                          }
                        }
                      },
                      "filter": {
                        "type": "object",
                        "properties": {
                          "textSearch": {
                            "description": "Поиск по номеру НМ или артикулу товара.",
                            "type": "integer",
                            "example": "test"
                          },
                          "withPhoto": {
                            "description": "`-1` - Показать все КТ. <br>`0` - Показать КТ без фото. <br>`1` - Показать КТ с фото.\n",
                            "type": "integer",
                            "example": -1
                          }
                        }
                      },
                      "sort": {
                        "type": "object",
                        "properties": {
                          "sortColumn": {
                            "description": "Поле по которому будет сортироваться список КТ (пока что поддерживается только `updatedAt`).",
                            "type": "string",
                            "example": "updateAt"
                          },
                          "ascending": {
                            "description": "Тип сортировки.",
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "cards": {
                          "description": "Список запрашиваемых КТ",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "sizes": {
                                "description": "Массив размеров для номенклатуры (для безразмерного товара все равно нужно передавать данный массив с одним элементом и нулевым размером, но с ценой и баркодом)\n",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "techSize": {
                                      "description": "Размер поставщика (пример S, M, L, XL, 42, 42-43)",
                                      "type": "string",
                                      "example": "0"
                                    },
                                    "skus": {
                                      "description": "Массив баркодов, строковых идентификаторов размеров поставщика (их можно сгенерировать с помощью API, см. Viewer)",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "5032781142964"
                                      }
                                    }
                                  }
                                }
                              },
                              "mediaFiles": {
                                "description": "Медиафайлы номенклатуры",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "http://imglink.com/imgOne.jpg"
                                }
                              },
                              "colors": {
                                "description": "Цвета номенклатуры",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "example": "белый"
                                }
                              },
                              "updateAt": {
                                "description": "Дата обновления",
                                "type": "string",
                                "example": "2022-08-10T10:16:52Z"
                              },
                              "vendorCode": {
                                "description": "Текстовый идентификатор НМ поставщика",
                                "type": "string",
                                "example": "670000001"
                              },
                              "brand": {
                                "description": "Брэнд",
                                "type": "string",
                                "example": "Шанель"
                              },
                              "object": {
                                "description": "Категория для который создавалось КТ с данной НМ",
                                "type": "string",
                                "example": "Туалетная вода"
                              },
                              "nmID": {
                                "description": "Числовой идентификатор номенклатуры Wildberries",
                                "type": "integer",
                                "example": 66964167
                              }
                            }
                          }
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "updatedAt": {
                              "description": "Дата с которой надо запрашивать следующий список КТ",
                              "type": "string",
                              "example": "2022-08-10T10:16:52Z"
                            },
                            "nmID": {
                              "description": "Номер номенклатуры с которой надо запрашивтаь следующий список КТ",
                              "type": "integer",
                              "example": 66964167
                            },
                            "total": {
                              "description": "Кол-во возвращенных КТ",
                              "type": "integer",
                              "example": 1
                            }
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки",
                      "example": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/error/list": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список несозданных НМ с ошибками",
        "description": "Метод позволяет получить список НМ и список ошибок которые произошли во время создания КТ. <br>`ВАЖНО`: Для того чтобы убрать НМ из ошибочных, надо повторно сделать запрос с исправленными ошибками на создание КТ.\n",
        "tags": [
          "Контент / Просмотр"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "object": {
                            "description": "Категория для который создавалось КТ с данной НМ",
                            "type": "string",
                            "example": "Блузка"
                          },
                          "vendorCode": {
                            "description": "Текстовый идентификатор НМ поставщика",
                            "type": "string",
                            "example": "6000000001"
                          },
                          "updatedAt": {
                            "description": "Дата и время запроса на создание КТ с данным НМ",
                            "type": "string",
                            "example": "2022-06-15T14:37:13Z"
                          },
                          "errors": {
                            "description": "Список ошибок из-за которых не обработался запрос на создание КТ с данным НМ",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "Поля Рос. размер, Размер обязательны для заполнения"
                            }
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/cards/filter": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Получение КТ по вендор кодам (артикулам)",
        "description": "Метод позволяет получить полную информацию по КТ с помощью вендор кода(-ов) номенклатуры из КТ  (артикулов).\n",
        "tags": [
          "Контент / Просмотр"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vendorCodes": {
                    "description": "Массив идентификаторов НМ поставщика. <br>Максимальное количество в запросе `100`.\n",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "6000000001"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "imtID": {
                            "description": "Идентификатор карточки товара (нужен для группирования НМ в одно КТ)",
                            "type": "integer",
                            "example": 50777914
                          },
                          "nmID": {
                            "description": "Числовой идентификатор номенклатуры Wildberries",
                            "type": "integer",
                            "example": 66964219
                          },
                          "vendorCode": {
                            "description": "Вендор код, текстовый идентификатор номенклатуры поставщика",
                            "type": "string",
                            "example": "6000000001"
                          },
                          "mediaFiles": {
                            "items": {
                              "description": "Медиафайлы номенклатуры",
                              "type": "string",
                              "example": "http://imglink.com/imgOne.jpg"
                            }
                          },
                          "sizes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "techSize": {
                                  "description": "Размер поставщика (пример S, M, L, XL, 42, 42-43)",
                                  "type": "string",
                                  "example": "40-41"
                                },
                                "wbSize": {
                                  "description": "Рос. размер",
                                  "type": "string",
                                  "example": "40-41"
                                },
                                "price": {
                                  "description": "Цена",
                                  "type": "integer",
                                  "example": 3999
                                },
                                "chrtID": {
                                  "description": "Числовой идентификатор размера для данной номенклатуры Wildberries",
                                  "type": "integer",
                                  "example": 12300001
                                },
                                "skus": {
                                  "description": "Массив баркодов, строковых идентификаторов размеров поставщика (их можно сгенерировать с помощью API, см. Viewer)",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "1000000001"
                                  }
                                }
                              }
                            }
                          },
                          "characteristics": {
                            "description": "Массив характеристик, индивидуальный для каждой категории",
                            "type": "array",
                            "items": {
                              "type": "object"
                            },
                            "example": [
                              {
                                "Бренд": "GlisH"
                              },
                              {
                                "Комплектация": [
                                  "Шлепанцы женские на не скользящей подошве - 1 пара"
                                ]
                              }
                            ]
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "example": null
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/barcodes": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Генерация баркодов",
        "description": "Метод позволяет сгенерировать массив уникальных баркодов для создания размера НМ в КТ.",
        "tags": [
          "Контент / Просмотр"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "count": {
                    "description": "Кол-во баркодов которые надо сгенерировать, максимальное доступное количество баркодов для генерации - `5000`",
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Массив сгенерированых баркодов",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "5032781145187"
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/object/all": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Категория товаров",
        "description": "С помощью данного метода можно получить список категорий товаров по текстовому фильтру (названию категории).",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "3D"
            },
            "description": "Поиск по названию категории"
          },
          {
            "name": "top",
            "in": "query",
            "description": "Количество запрашиваемых значений",
            "schema": {
              "type": "integer",
              "example": 50
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "objectName": {
                            "description": "Название категории",
                            "type": "string",
                            "example": "3D очки"
                          },
                          "parentName": {
                            "description": "Название родительской категории",
                            "type": "string",
                            "example": "Электроника"
                          },
                          "isVisible": {
                            "description": "Виден на сайте",
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/object/parent/all": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Родительские категории товаров",
        "description": "С помощью данного метода можно получить список всех родительских категорий товаров.",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Название категории",
                            "type": "string",
                            "example": "Электроника"
                          },
                          "isVisible": {
                            "description": "Виден на сайте",
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/object/characteristics/list/filter": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Характеристики для создания КТ по всем подкатегориям",
        "description": "С помощью данного метода можно получить список характеристик, которые можно или нужно заполнить при создании КТ в подкатегории определенной родительской категории.\n  <br>\n  <br>Характеристики с  `charcType=4`, имеющие единственное значение, <b>указывать строго без массива</b>, в противном случае карточка не будет создана:\n  <br><b>Правильно:</b>\n      <br>`{\"Высота упаковки\": 4}`\n  <br><b>Не правильно:</b>\n      <br>`{\"Высота упаковки\": [4]}`\n",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "Косухи"
            },
            "description": "Поиск по родительской категории."
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "objectName": {
                            "description": "Наименование подкатегории",
                            "type": "string",
                            "example": "Косухи"
                          },
                          "name": {
                            "description": "Наименование характеристики",
                            "type": "string",
                            "example": "Особенности модели"
                          },
                          "required": {
                            "description": "Характеристика обязательна к заполенению",
                            "type": "boolean",
                            "example": false
                          },
                          "unitName": {
                            "description": "Единица имерения (см, гр и т.д.)",
                            "type": "string",
                            "example": ""
                          },
                          "maxCount": {
                            "description": "Максимальное кол-во значений которое можно присвоить данной характеристике",
                            "type": "integer",
                            "example": 1
                          },
                          "popular": {
                            "description": "Характеристика популярна у пользователей",
                            "type": "boolean",
                            "example": false
                          },
                          "charcType": {
                            "description": "Тип характеристики (1 и 0 - строка или массив строк; 4 - число или массив чисел)",
                            "type": "integer",
                            "example": 1
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/object/characteristics/{objectName}": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Характеристики для создания КТ для категории товара",
        "description": "С помощью данного метода можно получить список характеристик, которые можно или нужно заполнить при создании КТ для определенной категории товаров. <br> <br> `Важно`: обязательная к заполнению характеристика при создании карточки любого товара - `Предмет`. <br>Значение характеристики `Предмет` соответствует значению параметра `objectName` в запросе. <br> <br>Характеристики с  `charcType=4`, имеющие единственное значение, <b>указывать строго без массива</b>, в противном случае карточка не будет создана: <br><b>Правильно:</b>\n    <br>`{\"Высота упаковки\": 4}`\n<br><b>Не правильно:</b>\n    <br>`{\"Высота упаковки\": [4]}`\n",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "parameters": [
          {
            "name": "objectName",
            "in": "path",
            "schema": {
              "type": "string",
              "example": "Носки"
            },
            "description": "Поиск по наименованию категории",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "objectName": {
                            "description": "Наименование подкатегории",
                            "type": "string",
                            "example": "Носки"
                          },
                          "name": {
                            "description": "Наименование характеристики",
                            "type": "string",
                            "example": "Глубина упаковки"
                          },
                          "required": {
                            "description": "Характеристика обязательна к заполенению",
                            "type": "boolean",
                            "example": false
                          },
                          "unitName": {
                            "description": "Единица имерения (см, гр и т.д.)",
                            "type": "string",
                            "example": "см"
                          },
                          "maxCount": {
                            "description": "Максимальное кол-во значений, которое можно присвоить данной характеристике. <br>Если 0, то нет ограничения.\n",
                            "type": "integer",
                            "example": 0
                          },
                          "popular": {
                            "description": "Характеристика популярна у пользователей",
                            "type": "boolean",
                            "example": false
                          },
                          "charcType": {
                            "description": "Тип характеристики (1 и 0 - строка или массив строк; 4 - число или массив чисел)",
                            "type": "integer",
                            "example": 4
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/colors": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Цвет",
        "description": "Получение значения характеристики цвет.",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Наименование цвета",
                            "type": "string",
                            "example": "персиковый крайола"
                          },
                          "parentName": {
                            "description": "Наименование родительского цвета",
                            "type": "string",
                            "example": "оранжевый"
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/kinds": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Пол",
        "description": "Получение значения характеристики пол.",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Массив значений для хар-ки Пол",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Мужской"
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/countries": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Страна Производства",
        "description": "Получение значения характеристики Страна Производства.",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "responses": {
          "200": {
            "400": {
              "description": "Неверная форма запроса.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/responseBodyError400"
                  }
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Значение характеристики Страны",
                            "type": "string",
                            "example": "Афганистан"
                          },
                          "fullName": {
                            "description": "Полное название страны",
                            "type": "string",
                            "example": "Исламский Эмират Афганистан"
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/collections": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Коллекция",
        "description": "Получение значения характеристики Коллекции.",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "description": "Количество запрашиваемых значений (максимум 5000)",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "Поиск по наименованию значения характеристики",
            "schema": {
              "type": "string",
              "example": "зим"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Идентификатор значения характеристики",
                            "type": "integer",
                            "example": 26764163
                          },
                          "name": {
                            "description": "Значение характеристики",
                            "type": "string",
                            "example": "2022-2023 зима осень"
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/seasons": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Сезон",
        "description": "Получение значения характеристики Сезон.",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Массив значений для хар-ки Сезон",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "демисезон"
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/contents": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Комплектация",
        "description": "Получение значения характеристики Комплектация.",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "description": "Количество запрашиваемых значений",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "Поиск по наименованию значения характеристики",
            "schema": {
              "type": "string",
              "example": "USB"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Идентификатор значения характеристики",
                            "type": "integer",
                            "example": 26069739
                          },
                          "name": {
                            "description": "Значение характеристики",
                            "type": "string",
                            "example": "1 USB провод Type-C"
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/consists": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Состав",
        "description": "Получение значения характеристики Состав.",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "description": "Количество запрашиваемых значений (максимум 5000)",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "Поиск по наименованию значения характеристики",
            "schema": {
              "type": "string",
              "example": "хлопок"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "Идентификатор значения характеристики",
                            "type": "integer",
                            "example": 26069729
                          },
                          "name": {
                            "description": "Значение характеристики",
                            "type": "string",
                            "example": "100% хлопок"
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/brands": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Бренд",
        "description": "Получение значения характеристики Бренд.",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "parameters": [
          {
            "name": "top",
            "in": "query",
            "description": "Количество запрашиваемых значений (максимум 5000)",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "pattern",
            "in": "query",
            "description": "Поиск по наименованию значения характеристики",
            "schema": {
              "type": "string",
              "example": "USB"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Массив найденных брендов",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "1001 Каталог"
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/directory/tnved": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "ТНВЭД код",
        "description": "С помощью данного метода можно получить список ТНВЭД кодов по имени категории и фильтру по тнвэд коду.",
        "tags": [
          "Контент / Конфигуратор"
        ],
        "parameters": [
          {
            "name": "objectName",
            "in": "query",
            "description": "Поиск по наименованию категории",
            "schema": {
              "type": "string",
              "example": "Блузки"
            }
          },
          {
            "name": "tnvedsLike",
            "in": "query",
            "description": "Поиск по коду ТНВЭД",
            "schema": {
              "type": "string",
              "example": "4203100001"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "items": {
                        "type": "object",
                        "properties": {
                          "subjectName": {
                            "description": "Наименование категории",
                            "type": "string",
                            "example": "Блузки"
                          },
                          "tnvedName": {
                            "description": "Код ТНВЭД",
                            "type": "string",
                            "example": "4203100001"
                          },
                          "description": {
                            "description": "Описание кода ТНВЭД",
                            "type": "string",
                            "example": "Предметы одежды из натуральной кожи"
                          },
                          "isKiz": {
                            "description": "КИЗовый ТНВЭД",
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          },
          "403": {
            "description": "Доступ запрещен.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError403"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/media/save": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Изменение медиа контента КТ",
        "description": "Метод позволяет изменить порядок изображений или удалить медиафайлы с НМ в КТ, а также загрузить изображения в НМ со сторонних ресурсов по URL. <br>Текущие изображения заменяются на переданные в массиве data. <br> <br>Требования к медиафайлам: <br>`Фото`: минимальное разрешение – 450х450. <br>Максимально допустимое количество фото в КТ 30. <br> <br>Если хотя бы одно изображение в запросе не соответствует требованиям к медиафайлам, то даже при коде ответа 200 изображения не загрузятся в КТ.\n",
        "tags": [
          "Контент / Медиафайлы"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vendorCode": {
                    "description": "Артикул номенклатуры.",
                    "type": "string",
                    "example": "6000000001"
                  },
                  "data": {
                    "description": "Ссылки на изображения в том порядке, в котором мы хотим их увидеть в карточке товара.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "https://basket-stage-02.wb.ru/vol669/part66964/66964260/images/big/2.jpg"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          }
        }
      }
    },
    "/content/v1/media/file": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Добавление медиа контента в КТ",
        "description": "Метод позволяет загрузить и добавить один медиафайл за запрос, к НМ в КТ.\n<br>Требования к медиафайлам: <br>`Фото`: минимальное разрешение – 450х450. <br>Максимально допустимое количество фото в КТ 30. <br>`Видео`: максимальный размер 50 мб. Форматы MOV, MP4. <br>Максимально допустимое количество видео в КТ 1.\n",
        "tags": [
          "Контент / Медиафайлы"
        ],
        "parameters": [
          {
            "name": "X-Vendor-Code",
            "in": "header",
            "description": "Артикул НМ",
            "schema": {
              "type": "string",
              "example": "6000000001"
            },
            "required": true
          },
          {
            "name": "X-Photo-Number",
            "in": "header",
            "description": "Номер медиафайла на загрузку. <b>Начинать с 1</b>. <br>Чтобы добавить фото к уже загруженным в НМ, номер медиафайла должен быть больше кол-ва загруженных в НМ медиафайлов.\n",
            "schema": {
              "type": "integer",
              "example": 2
            },
            "required": true
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "uploadfile": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": false
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": ""
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "string",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Неверная форма запроса.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyError400"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/supplies": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список поставок",
        "description": "Список поставок.",
        "tags": [
          "Marketplace / Deprecated"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "`ACTIVE` - активные поставки, `ON_DELIVERY` - поставки в пути (которые ещё не приняты на складе).",
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "ON_DELIVERY"
              ]
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Список поставок",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "supplies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "supplyId": {
                            "type": "string",
                            "description": "Идентификатор поставки",
                            "example": "WB-GI-1234567"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный статус поставки",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "example": null
                    },
                    "data": {
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки",
                      "type": "boolean",
                      "example": true
                    },
                    "errorText": {
                      "description": "Описание ошибки",
                      "type": "string",
                      "example": "Неизвестный статус поставки"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Новая поставка",
        "description": "Создание новой поставки. <br> <br> Ограничения работы с поставками: <ul>\n  <li>При добавлении в поставку все заказы в статусе <b>0 (новый)</b> будут автоматически переведены в статус <b>1 (в работе)</b>.</li>\n  <li>Вы можете как обычно переводить статусы вручную отдельными вызовами на <b>PUT /api/v2/orders</b>.</li>\n  <li>Обратите внимание, что если вы переведёте заказ в статус <b>3 (\"Отмена\")</b>, то заказ автоматически удалится из поставки, если был прикреплён к ней.</li>\n</ul> Порядок работы: <ol>\n  <li>Создайте новую поставку с помощью метода <b>POST /api/v2/supplies</b>. В ответ вернется идентификатор созданной поставки в формате <b>\"WB-GI-1234567\"</b>.</li>\n  <li>Штрихкод поставки можно получить методом <b>GET /api/v2/supplies/{id поставки}/barcode</b> в формате <b>pdf</b> или <b>svg</b>. Штрихкод генерируется в формате code-128. Файл приходит в массиве байтов, закодированном в base64.</li>\n  <li>В текущую открытую поставку нужно добавить заказы, которые вы повезёте на склад, методом <b>PUT /api/v2/supplies/{id поставки}</b>. Обратите внимание, что при добавлении заказов к поставке они будут автоматически приняты в работу, т.е. переведены в статус 1.</li>\n  <li>После добавления заказов к поставке, вы можете получить этикетки с помощью метода <b>POST /api/v2/orders/stickers</b>. Обратите внимание, что стикеры для заказа можно получить только в промежуток между открытием и закрытием соответствующей поставки.</li>\n  <li>После того как поставка будет упомплектована нужными заказами, необходимо ее закрыть с помощью метода <b>POST /api/v2/supplies/{id поставки}/close</b>.</li>\n  <li>Заказы, добавленные к поставке, можно получить методом <b>GET /api/v2/supplies/{id поставки}/orders</b>.</li>\n  <li>Все активные поставки, а также поставки в пути, можно получить методом <b>GET /api/v2/supplies</b>.</li>\n</ol>\n",
        "tags": [
          "Marketplace / Deprecated"
        ],
        "responses": {
          "201": {
            "description": "Поставка создана.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "supplyId": {
                      "type": "string",
                      "example": "WB-GI-1234567"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "У данного поставщика уже есть активная поставка.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "example": null
                    },
                    "data": {
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки",
                      "type": "boolean",
                      "example": true
                    },
                    "errorText": {
                      "description": "Описание ошибки",
                      "type": "string",
                      "example": "У данного поставщика уже есть активная поставка"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/supplies/{id}": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "put": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Добавление к поставке заказов",
        "description": "Добавляет к поставке заказы и переводит их в статус 1 (\"В сборке\").\n",
        "tags": [
          "Marketplace / Deprecated"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orders": {
                    "description": "Список заказов.",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "8423848"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Заказы успешно прикреплены к поставке."
          },
          "400": {
            "description": "<li>Передан пустой массив заказов.</li> <li>Некорректный идентификатор заказа.</li> <li>Следующие заказы не удалось прикрепить к поставке. Проверьте их на соответствие требованиям.</li>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/suppliesIdRespBody"
                }
              }
            }
          },
          "404": {
            "description": "<li>Поставка не найдена</li> <li>Данные заказы не найдены</li>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/suppliesIdRespBody"
                }
              }
            }
          },
          "409": {
            "description": "<li>Поставка уже закрыта.</li> <li>Данные заказы уже закреплены за другой поставкой.</li> <li>Данные заказы относятся к доставке своими силами.</li> <li>Данные заказы имеют статус, отличный от 0 (\"Новый\") и 1 (\"В сборке\")</li>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/suppliesIdRespBody2"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/supplies/{id}/close": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Закрытие поставки",
        "description": "Закрывает поставку. <br> Для закрытия поставки требуется хотя бы один закреплённый за ней заказ. <br> После закрытия к поставке нельзя будет добавить новые заказы.\n",
        "tags": [
          "Marketplace / Deprecated"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "Поставка успешно закрыта."
          },
          "400": {
            "description": "Некорректный идентификатор поставки.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/suppliesIdRespBody"
                }
              }
            }
          },
          "404": {
            "description": "Поставка не найдена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/suppliesIdRespBody"
                }
              }
            }
          },
          "409": {
            "description": "<li>Поставка уже закрыта.</li> <li>Добавьте заказы к поставке, чтобы закрыть ее.</li>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/suppliesIdRespBody"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/supplies/{id}/barcode": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Штрихкод поставки в заданном формате",
        "description": "Возвращает штрихкод поставки в заданном формате: <b>pdf</b> или <b>svg</b>. <br> Штрихкод генерируется в формате <b>code-128</b>. <br> Массив байтов передаётся закодированным в <b>base64</b>.\n",
        "tags": [
          "Marketplace / Deprecated"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Формат штрихкода.",
            "schema": {
              "type": "string",
              "enum": [
                "pdf",
                "svg"
              ]
            },
            "required": true
          },
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Штрихкод поставки сгенерирован.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mimeType": {
                      "description": "Формат передаваемого файла.",
                      "type": "string",
                      "enum": [
                        "application/pdf",
                        "image/svg+xml"
                      ]
                    },
                    "name": {
                      "description": "Идентификатор поставки",
                      "type": "string",
                      "example": "WB-GI-1234567"
                    },
                    "file": {
                      "description": "Штрихкод поставки генерируется в формате code-128. Сам файл приходит в массиве байтов, закодированном в base64.",
                      "type": "string",
                      "format": "byte",
                      "example": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "<li>Некорректный идентификатор поставки.</li> <li>Неподдерживаемый формат документа.</li>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/suppliesIdRespBody"
                }
              }
            }
          },
          "404": {
            "description": "Поставка не найдена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/suppliesIdRespBody"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/supplies/{id}/orders": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список заказов, закреплённых за поставкой",
        "description": "Список заказов, закреплённых за поставкой.",
        "tags": [
          "Marketplace / Deprecated"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Сформирован перечень закреплённых за поставкой заказов.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderId": {
                            "description": "Идентификатор заказа.",
                            "type": "string",
                            "example": "13833711"
                          },
                          "dateCreated": {
                            "description": "Дата создания заказа `(RFC3339)`.",
                            "type": "string",
                            "example": "2021-02-20T16:50:33.365+03:00"
                          },
                          "storeId": {
                            "description": "Идентификатор склада поставщика, на который пришел заказ.",
                            "type": "integer",
                            "example": 658434
                          },
                          "wbWhId": {
                            "description": "Идентификатор склада WB, на которой заказ должен быть доставлен.",
                            "type": "integer",
                            "example": 119408
                          },
                          "pid": {
                            "description": "Идентификатор ПВЗ/магазина, куда необходимо доставить заказ (если применимо).",
                            "type": "integer",
                            "example": 0
                          },
                          "officeAddress": {
                            "description": "Адрес ПВЗ/магазина, куда необходимо доставить заказ (если применимо).",
                            "type": "string",
                            "example": "г Ставрополь (Ставропольский край), Ленина 482/1"
                          },
                          "chrtId": {
                            "description": "Идентификатор артикула.",
                            "type": "integer",
                            "example": 11111111
                          },
                          "barcodes": {
                            "description": "Массив штрихкодов товара.",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "6665956397512"
                            }
                          },
                          "status": {
                            "description": "Статус выставляемый продавцами. <br>`0` - Новый заказ. <br>`1` - В работе. <br>`2` - Сборочное задание завершено. <br>`3` - Сборочное задание отклонено. <br>`5` - На доставке курьером. <br>`6` - Курьер довез и клиент принял товар. <br>`7` - Клиент не принял товар.\n",
                            "type": "integer",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              5,
                              6,
                              7
                            ]
                          },
                          "userStatus": {
                            "description": "Статус выставляемый Wildberries. <br>`0` - Новый заказ. <br>`1` - Отмена клиента. <br>`2` - Доставлен. <br>`3` - Возврат. <br>`4` - Ожидает. <br>`5` - Брак.\n",
                            "type": "integer",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              5
                            ]
                          },
                          "rid": {
                            "description": "Уникальный идентификатор вещи, `разный у одинаковых chrt_id`.",
                            "type": "string",
                            "example": "100321840623"
                          },
                          "totalPrice": {
                            "description": "Цена в валюте продажи с учетом скидок в копейках. `Код валюты продажи в поле currencyCode`.",
                            "type": "integer",
                            "example": 5600
                          },
                          "currencyCode": {
                            "description": "Код валюты по ISO 4217. <br>Пример: <ul>\n  <li>`51` - Армянский драм.\n  <li>`398` - Казахский тенге.\n  <li>`417` - Киргизский сом.\n  <li>`643` - Российский рубль.\n  <li>`840` - Доллар США.\n  <li>`933` - Белорусский рубль.\n  <li>`974` - Белорусский рубль.\n</ul>\n",
                            "type": "integer",
                            "example": 643
                          },
                          "orderUID": {
                            "description": "Идентификатор транзакции (для группировки заказов).",
                            "type": "string",
                            "example": "string"
                          },
                          "deliveryType": {
                            "description": "Тип доставки:\n  <ul>\n    <li>`1` - Обычная доставка.\n    <li>`2` - Доставка силами поставщика.\n  </ul>\n",
                            "type": "integer",
                            "enum": [
                              1,
                              2
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный идентификатор поставки.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/suppliesIdRespBody"
                }
              }
            }
          },
          "404": {
            "description": "Поставка не найдена.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/suppliesIdRespBody"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/stocks": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список товаров с остатками",
        "description": "Возвращает список товаров поставщика с их остатками.",
        "tags": [
          "Marketplace / Deprecated"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Поиск по всем полям таблицы.",
            "schema": {
              "type": "string",
              "example": "string"
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": true,
            "description": "Сколько записей пропустить (для пагинации).",
            "schema": {
              "type": "integer",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": true,
            "description": "Сколько записей выдать (для пагинации).",
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cписок товаров поставщика с их остатками.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "type": "integer",
                      "example": 1
                    },
                    "stocks": {
                      "description": "Описание остатка товара.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "subject": {
                            "description": "Категория.",
                            "type": "string",
                            "example": "Носки"
                          },
                          "brand": {
                            "description": "Бренд.",
                            "type": "string",
                            "example": "Lincoln&Sharks"
                          },
                          "name": {
                            "description": "Наименование.",
                            "type": "string",
                            "example": "носки"
                          },
                          "size": {
                            "description": "Размер.",
                            "type": "string",
                            "example": "10,5"
                          },
                          "barcode": {
                            "description": "Баркод.",
                            "type": "string",
                            "example": "2039893700627"
                          },
                          "barcodes": {
                            "description": "Массив баркодов.",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "2039893700627"
                            }
                          },
                          "article": {
                            "description": "Артикул поставщика.",
                            "type": "string",
                            "example": "22224434"
                          },
                          "stock": {
                            "description": "Остаток.",
                            "type": "integer",
                            "example": 1
                          },
                          "warehouseName": {
                            "description": "Склад с товаром.",
                            "type": "string",
                            "example": "string"
                          },
                          "warehouseId": {
                            "description": "ID склада.",
                            "type": "integer",
                            "example": 205384680
                          },
                          "id": {
                            "type": "integer",
                            "example": 205384680
                          },
                          "chrtId": {
                            "type": "integer",
                            "example": 205384680
                          },
                          "nmId": {
                            "type": "integer",
                            "example": 114296358
                          },
                          "isCargoDelivery": {
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Deprecated"
        ],
        "summary": "Обновление остатков товара",
        "description": "Обновление остатков товара.  <br> За раз можно загрузить `1000` строк.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "barcode": {
                      "description": "Баркод.",
                      "type": "string",
                      "example": "656335639"
                    },
                    "stock": {
                      "description": "Остаток.",
                      "type": "integer",
                      "example": 1
                    },
                    "warehouseId": {
                      "description": "ID склада.",
                      "type": "integer",
                      "example": 7543
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Если error = true, то во время обновления произошла ошибка. В ответе будут перечислены баркоды остатков, которые не загрузились.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "errorText": {
                      "type": "string",
                      "example": "string"
                    },
                    "additionalErrors": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "barcode": {
                                "description": "Баркод.",
                                "type": "string",
                                "example": "123456789"
                              },
                              "err": {
                                "description": "Ошибка, случившаяся при загрудке остатка с данным баркодом.",
                                "type": "string",
                                "example": "указан отрицательный остаток"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Deprecated"
        ],
        "summary": "Удаление остатков товара",
        "description": "Удаление остатков товара. <b>Внимание! Действие необратимо</b>. Удаленный остаток будет необходимо загрузить повторно для возобновления продаж.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "barcode": {
                      "description": "Баркод.",
                      "type": "string",
                      "example": "656335639"
                    },
                    "warehouseId": {
                      "description": "ID склада.",
                      "type": "integer",
                      "example": 7543
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Если error = true, то среди остатков в теле запроса есть неверно указанные. В ответе будут неверно указанные остатки с сообщением о том, что указано неверно.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": true
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": "string"
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "object"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "barcode": {
                            "description": "Баркод.",
                            "type": "string",
                            "example": "123456789"
                          },
                          "warehouseId": {
                            "description": "ID склада.",
                            "type": "integer",
                            "example": 7543
                          },
                          "err": {
                            "description": "Причина по которой нельзя удалить данный остаток.",
                            "type": "string",
                            "example": "Указанный склад не принадлежит данному поставщику"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Все остатки указаны неверно или у поставщика нет ни одного склада.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/respBodyStocks"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/warehouses": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Cписок складов",
        "description": "Cписок складов продавца.",
        "tags": [
          "Marketplace / Остатки"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "ID склада.",
                        "type": "integer",
                        "example": 5235
                      },
                      "name": {
                        "description": "Наименование склада.",
                        "type": "string",
                        "example": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/orders": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список сборочных заданий",
        "description": "Метод возвращает список сборочных заданий поставщика. <br> <br> При выборе промежутка времени заказы следует забирать с помощью параметров `skip` и `take`, не более чем 1000 за один запрос. Параметр `total` подсказывает, сколько всего заказов было сделано за текущий промежуток времени. <br> <br> При отправке параметров `date_start` и `date_end` обратите внимание, что часовой пояс в формате <b>RFC3339</b> передается как `2021-09-30T17:14:52+03:00`, а время в UTC как `2021-09-30T17:14:52Z`. В то же время, знак `+` является зарезервированным в стандарте <b>RFC3986</b>. Поэтому чтобы корректно передать часовой пояс, необходимо передавать дату после обработки методом urlencode (или его аналогом). <br> <br> Ответ содержит два разных поля о статусе заказа (см. описание в схеме ответа): <ul>\n  <li>`status` - это то что меняет поставщик (метод <b>PUT /api/v2/orders</b>). Он учитывается для расчета опозданий и используется для отображения движения заказа.</li>\n  <li>`userStatus` - используется только для чтения, менять его нельзя. Это статус со стороны клиента. По нему можно понять, делал ли клиент отмену или возврат по причине брака.</li>\n</ul>\n",
        "tags": [
          "Marketplace / Deprecated"
        ],
        "parameters": [
          {
            "name": "date_start",
            "in": "query",
            "required": true,
            "description": "С какой даты вернуть сборочные задания (заказы). <br>Дата в формате RFC3339. Нужно передать дату со временем. <br>Время можно указывать с точностью до секунд или миллисекунд. <br>Литера `Z` в конце строки означает, что время передается в UTC-часовом поясе. <br>Примеры: <ul> <li> `2019-06-20T00:00:00Z` <li> `2019-06-20T00:00:00.12345Z` </ul>\n",
            "schema": {
              "type": "string",
              "example": "2022-03-02T19:30:16Z"
            }
          },
          {
            "name": "date_end",
            "in": "query",
            "description": "По какую дату вернуть сборочные задания (заказы) (в формате `RFC3339`)",
            "schema": {
              "type": "string",
              "example": "2022-05-02T19:30:16Z"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Статус заказа.",
            "schema": {
              "type": "integer",
              "example": 2
            }
          },
          {
            "name": "skip",
            "in": "query",
            "required": true,
            "description": "Сколько записей пропустить.",
            "schema": {
              "type": "integer",
              "example": 0
            }
          },
          {
            "name": "take",
            "in": "query",
            "required": true,
            "description": "Сколько записей вернуть за раз.",
            "schema": {
              "type": "integer",
              "example": 10
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор сборочного задания, если нужно получить данные по определенному заказу.",
            "schema": {
              "type": "integer",
              "example": 123456
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cписок товаров поставщика с их остатками.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "total": {
                      "description": "Общее количество заказов по заданным параметрам (за указанный промежуток времени).",
                      "type": "integer",
                      "example": 1
                    },
                    "orders": {
                      "description": "Список заказов.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderId": {
                            "description": "Идентификатор заказа.",
                            "type": "string",
                            "example": "13833711"
                          },
                          "dateCreated": {
                            "description": "Дата создания заказа (`RFC3339`).",
                            "type": "string",
                            "example": "2021-02-20T16:50:33.365+03:00"
                          },
                          "wbWhId": {
                            "description": "Идентификатор склада WB, на которой заказ должен быть доставлен.",
                            "type": "integer",
                            "example": 119408
                          },
                          "storeId": {
                            "description": "Идентификатор склада поставщика, на который пришел заказ.",
                            "type": "integer",
                            "example": 658434
                          },
                          "pid": {
                            "description": "Идентификатор ПВЗ/магазина, куда необходимо доставить заказ (если применимо).",
                            "type": "integer",
                            "example": 0
                          },
                          "officeAddress": {
                            "description": "Адрес ПВЗ/магазина, куда необходимо доставить заказ (если применимо).",
                            "type": "string",
                            "example": "г Ставрополь (Ставропольский край), Ленина 482/1"
                          },
                          "OfficeLatitude": {
                            "description": "Широта адреса ПВЗ/магазина, куда необходимо доставить заказ (если применимо).",
                            "type": "number",
                            "example": 45.038605
                          },
                          "OfficeLongitude": {
                            "description": "Долгота адреса ПВЗ/магазина, куда необходимо доставить заказ (если применимо).",
                            "type": "number",
                            "example": 41.905666
                          },
                          "deliveryAddress": {
                            "description": "Адрес клиента для доставки.",
                            "type": "string",
                            "example": "улица, дом, квартира"
                          },
                          "deliveryAddressDetails": {
                            "$ref": "#/components/schemas/deliveryAddressDetails"
                          },
                          "userInfo": {
                            "$ref": "#/components/schemas/userInfo"
                          },
                          "chrtId": {
                            "description": "Идентификатор артикула.",
                            "type": "integer",
                            "example": 11111111
                          },
                          "barcode": {
                            "description": "Штрихкод товара.",
                            "type": "string",
                            "example": "6665956397512"
                          },
                          "barcodes": {
                            "description": "Массив штрихкодов товара.",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "6665956397512"
                            }
                          },
                          "scOfficesNames": {
                            "description": "Массив СЦ приоритетных для доставки заказа. <br>Если поле не заполнено или массив пустой, приоритетного СЦ нет для данного заказа нет.\n",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "СЦ Калуга"
                            }
                          },
                          "status": {
                            "description": "Статус выставляемый продавцами. <br>`0` - Новый заказ. <br>`1` - В работе. <br>`2` - Сборочное задание завершено. <br>`3` - Сборочное задание отклонено. <br>`5` - На доставке курьером. <br>`6` - Курьер довез и клиент принял товар. <br>`7` - Клиент не принял товар.\n",
                            "type": "integer",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              5,
                              6,
                              7
                            ]
                          },
                          "userStatus": {
                            "description": "Статус выставляемый Wildberries. <br>`0` - Новый заказ. <br>`1` - Отмена клиента. <br>`2` - Доставлен. <br>`3` - Возврат. <br>`4` - Ожидает. <br>`5` - Брак.\n",
                            "type": "integer",
                            "enum": [
                              0,
                              1,
                              2,
                              3,
                              4,
                              5
                            ]
                          },
                          "rid": {
                            "description": "Уникальный идентификатор вещи, `разный у одинаковых chrt_id`.",
                            "type": "string",
                            "example": "100321840623"
                          },
                          "totalPrice": {
                            "description": "Цена в валюте продажи с учетом скидок в копейках. `Код валюты продажи в поле currencyCode`.",
                            "type": "integer",
                            "example": 5600
                          },
                          "currencyCode": {
                            "description": "Код валюты по ISO 4217. <br>Пример: <ul>\n  <li>`51` - Армянский драм.\n  <li>`398` - Казахский тенге.\n  <li>`417` - Киргизский сом.\n  <li>`643` - Российский рубль.\n  <li>`840` - Доллар США.\n  <li>`933` - Белорусский рубль.\n  <li>`974` - Белорусский рубль.\n</ul>\n",
                            "type": "integer",
                            "example": 643
                          },
                          "orderUID": {
                            "description": "Идентификатор транзакции (для группировки заказов).",
                            "type": "string",
                            "example": "string"
                          },
                          "deliveryType": {
                            "description": "Тип доставки:\n  <ul>\n    <li>`1` - Обычная доставка.\n    <li>`2` - Доставка силами поставщика.\n  </ul>\n",
                            "type": "integer",
                            "enum": [
                              1,
                              2
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Обновление статуса сборочных заданий",
        "description": "Метод обновляет статус переданных сборочных заданий. <br> <br> <h2>Порядок работы со статусами для разного типа логистики</h2> Если заказ для любого типа логистики не может быть выполнен по любой причине, поставщик ставит статус <b>3 (\"Отклонено\")</b>.Переводить заказ в отмену можно из любого статуса, кроме конечного. Т.е. заказ в статусах <b>2 (\"Собрано\")</b>, <b>6 (\"Клиент получил товар\")</b>, <b>7 (\"Клиент не принял заказ\")</b> отменить уже нельзя. <h3>Доставка на склад WB.</h3>\n  <ul>\n    <li>Заказ приходит в статусе <b>0 (\"Новый\")</b>.</li>\n    <li>Поставщик принимает заказ и ставит статус <b>1 (\"В работе\")</b>.</li>\n    <li>Заказ собран, поставщик ставит статус <b>2 (\"Завершено\")</b>. После этого заказ должен быть доставлен на склад Wildberries в указанный срок.</li>\n  </ul>\n<h3>Доставка самостоятельно до клиента.</h3>\n   <ul>\n    <li>Заказ приходит в статусе <b>0 (\"Новый\")</b>.</li>\n    <li>Поставщик принимает заказ и ставит статус <b>1 (\"В работе\")</b>.</li>\n    <li>Если заказ собран и его передали курьеру, поставщик ставит статус <b>5 (\"Доставка курьером\")</b>.</li>\n    <li>Если заказ успешно доставлен клиенту, поставщик ставит статус <b>6 (\"Клиент принял заказ\")</b>.</li>\n    <li>Если клиент отказался от заказа, т.е. курьер не отдал его, поставщик ставит статус <b>7 (\"Клиент не принял заказ\")</b>.</li>\n  </ul>\n<h3>Самовывоз клиентом из магазина.</h3>\n  <ul>\n    <li>Заказ приходит в статусе <b>0 (\"Новый\")</b>.</li>\n    <li>Поставщик принимает заказ и ставит статус <b>1 (\"В работе\")</b>.</li>\n    <li>Когда заказ готов к выдаче, поставщик статус <b>9 (\"Готово к выдаче\")</b>.</li>\n    <li>Если клиент забрал заказ из точки самовывоза, поставщик ставит статус <b>6 (\"Клиент забрал заказ\")</b>.</li>\n    <li>Если клиент отказался от заказа, поставщик ставит статус <b> 7 (\"Клиент не принял заказ\")</b>.</li>\n  </ul>\n<h3>Отправка КИЗов товара.</h3>\n  <ul>\n    <li>Требуется только для фармацевтической продукции. При отправке КИЗов на заказы, где они не требуются, вернётся ошибка 400.</li>\n    <li>Отправлять КИЗЫ нужно при переводе заказов в статус <b>6 (\"Клиент забрал заказ\")</b>.</li>\n  </ul>\n",
        "tags": [
          "Marketplace / Deprecated"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "orderId": {
                      "description": "Идентификатор заказа.",
                      "type": "string",
                      "example": "13833711"
                    },
                    "status": {
                      "description": "Статус. `0` - Новый заказ. `1` - В работе. `2` - Сборочное задание завершено. `3` - Сборочное задание отклонено. `5` - На доставке курьером. `6` - Клиент получил товар (курьерская доставка и самовывоз). `7` - Клиент не принял товар (курьерская доставка и самовывоз). `8` - Товар для самовывоза из магазина принят к работе. `9` - Товар для самовывоза из магазина готов к выдаче.\n",
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2,
                        3,
                        5,
                        6,
                        7,
                        8,
                        9
                      ]
                    },
                    "sgtin": {
                      "description": "Массив КИЗов. Требуется только для фармацевтической продукции при переводе её в статус `6` (\"Клиент получил товар\").\n",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "description": "Код маркировки на упаковке.\n",
                            "type": "string",
                            "example": "..."
                          },
                          "numerator": {
                            "description": "Числитель, количество единиц товара из упаковки (1, если продается целая упаковка).\n",
                            "type": "integer",
                            "example": 1
                          },
                          "denominator": {
                            "description": "Знаменатель, количество единиц товара в упаковке (1, если продается целая упаковка, т.е. для полной упаковки числитель = знаменатель = 1)\n",
                            "type": "integer",
                            "example": 1
                          },
                          "sid": {
                            "description": "Идентификатор места деятельности субъекта обращения в ИС МДЛП.\n",
                            "type": "integer",
                            "example": 123
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Обновление прошло успешно."
          },
          "400": {
            "description": "Ошибка обновления статуса заказов.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": true
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": "Несоответствие статусов сборочных заданий. Проверьте их правильность. Номера заказов: [123, 321]"
                    },
                    "data": {
                      "type": "object"
                    },
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/orders/stickers": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Cписок этикеток сборочных заданий",
        "description": "Возвращает список QR этикеток по переданному массиву сборочных заданий. <h3>Ограничения при работе с методом.</h3> <ol>\n  <li>Нельзя запросить больше 1000 этикеток за раз (не более 1000 ID заказов в запросе).</li>\n  <li>Метод возвращает этикетки только для заказов, взятых в работу (в статусе 1 и дальше).</li>\n<ol>\n",
        "tags": [
          "Marketplace / Deprecated"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestBodyStickers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cписок стикеров.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "additionalErrors": {
                      "description": "Дополнительные ошибки.",
                      "example": null
                    },
                    "error": {
                      "description": "Флаг ошибки.",
                      "type": "boolean",
                      "example": true
                    },
                    "errorText": {
                      "description": "Описание ошибки.",
                      "type": "string",
                      "example": "string"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderId": {
                            "description": "Идентификатор сборочного задания.",
                            "type": "integer",
                            "example": 8423848
                          },
                          "sticker": {
                            "type": "object",
                            "properties": {
                              "wbStickerId": {
                                "description": "Идентификатор этикетки.",
                                "type": "integer",
                                "example": 2316489753
                              },
                              "wbStickerIdParts": {
                                "type": "object",
                                "properties": {
                                  "A": {
                                    "description": "Первая часть идентификатора этикетки (для печати подписи).",
                                    "type": "string",
                                    "example": "231648"
                                  },
                                  "B": {
                                    "description": "Вторая часть идентификатора этикетки.",
                                    "type": "string",
                                    "example": "9753"
                                  }
                                }
                              },
                              "wbStickerEncoded": {
                                "description": "Закодированное значение стикера (представляется на этикетке в формате Code-128).\n",
                                "type": "string",
                                "example": "!uKEtQZVx"
                              },
                              "wbStickerSvgBase64": {
                                "description": "Полное представление этикетки в векторном формате.\n",
                                "type": "string",
                                "example": "PD94bWwgdmVyc2lvbj0iMS4wIj8+CjwhLS0gR2VuZXJhdGVkIGJ5IFNWR28gLS0+Cjxzdmcgd2lkdGg9IjQwMCIgaGVpZ2h0PSIzMDAiCiAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICAgIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIj4KPHJlY3QgeD0iMCIgeT0iMCIgd2lkdGg9IjQwMCIgaGVpZQiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzE4IiB5PSIyMCIgd2lkdGg9IjYiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzI2IiB5PSIyMCIgd2lkdGg9IjIiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzMwIiB5PSIyMCIgd2lkdGg9IjQiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMjAiIHk9IjIwMCIgd2lkdGg9IjM1MCIgaGVpZ2h0PSI5MCIgc3R5bGU9ImZpbGw6YmxhY2siIC8+Cjx0ZXh0IHg9IjMwIiB5PSIyNDAiIHN0eWxlPSJmaWxsOndoaXRlO2ZvbnQtc2l6ZTozMHB0O3RleHQtYW5jaG9yOnN0YXJ0IiA+MjMxNjQ4PC90ZXh0Pgo8dGV4dCB4PSIzNTAiIHk9IjI3MCIgc3R5bGU9ImZpbGw6d2hpdGU7Zm9udC1zaXplOjUwcHQ7dGV4dC1hbmNob3I6ZW5kIiA+OTc1MzwvdGV4dD4KPC9zdmc+Cg=="
                              },
                              "wbStickerZplV": {
                                "description": "Полное представление этикетки в формате ZPL (вертикальное положение).\n",
                                "type": "string",
                                "example": "^XZ\n^XA\n^CI28\n^CF0\n^LS0\n^FT26,160^BY2^BCN,140,N,N^FD!uKEtQZVx^FS\n^FO30,177^FB200,1,0,L^AZN,35,40^FD231648^FS\n^FO160,173^FB110,1,0,R^AZN,68,50^FD9753^FS\n^LRY^FO20,170^GB280,60,50^FS^LRN\n^XZ"
                              },
                              "wbStickerZpl": {
                                "description": "Полное представление этикетки в формате ZPL (горизонтальное положение)\n",
                                "type": "string",
                                "example": "^XZ\n^XA\n^CI28\n^CF0\n^LS0\n^FO20,26^BY2^BCR,140,N,N^FD!uKEtQZVx^FS\n^FO177,87^FB200,1,0,L^AZB,35,40^FD231648^FS\n^FO173,50^FB110,1,0,R^AZB,68,50^FD9753^FS\n^LRY^FO170,20^GB60,280,50^FS^LRN\n^XZ"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "<li>Неверная форма запроса.</li>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyStickersError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/orders/stickers/pdf": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "deprecated": true,
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Cписок QR стикеров в формате pdf",
        "description": "Ограничения при работе с методом. <ul>\n  <li>Нельзя запросить больше 1000 этикеток за раз (не более 1000 ID заказов в запросе).</li>\n  <li>Метод возвращает этикетки только для заказов, взятых в работу (в статусе 1 и дальше).</li>\n</ul>\n",
        "tags": [
          "Marketplace / Deprecated"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/requestBodyStickers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Файл pdf со стикерами.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "boolean",
                      "example": true
                    },
                    "errorText": {
                      "type": "string",
                      "example": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "file": {
                          "description": "Pdf файл в base64.",
                          "type": "string",
                          "example": "JVBERi0xLjMKMyAwIG9iago8PC9UeXBlIC9QYWdlCi9QYXJlbnQgMSAwIFIKL01lZGlhQm94IFswIDAgMTE0LjAwIDg1LjgwXQovUmVzb3VyY2VzIDIgMCBSCi9Db250ZW50cyA0IDAgUj4+CmVuZG9iago0IDAgb2JqCjw8L0ZpbHRlciAvRmxhdGVEZWNvZGUgL0xlbmd0aCAzNTk+PgpzdHJlYW0KeAGUlM+K4zAMxu9+Ch23h3rl//K10F3YW8EvsGmSQm8zl3n9IXIhKiKGOSX4k/X7PtsI4Z9BeBq0qcCXQYuI8Pf1fRgXbS5A3sYCzoYA55S3lc8FVuP4t4u4rb6JtK0ciN5bxJeo2voR0wum3lk3i53pN7w0FHili8ptEEwtCqYWRU5lKHL5ATPG/RC4TrqNaY+i29JgZ+LyA2YSTK6TzJT3tnxBb6LIqdxm7nXAzCNmFkzdtuyHoMSyvdUXk/HSbQmjnaP7LCKnakvsoufk5ySZNHpDNGLS6D6ryKmYVZwte5OG6ugNVZFTXbZDjt6Dqr4O2UdXuVBSz1zv+8joI+IcOAMPjUuD339mpFDSmuMyVcrunpf/S5zX+zpPc0iI6zRPSwgLuGQRoa1wbeYDHE+nB1waZBs8VBsKtBl+hZIz4gnaE64NbuZnEH8IQUsFvC2eKYmITtCecG1wM98BAAD//418GGcKZW5kc3RyZWFtCmVuZG9iago1IDAgb2JqCjw8L1R5cGUgL1BhZ2UKL1BhcmVudCAxIDAgUgovTWVkaWFCb3ggWzAgMCAxMTQuMDAgODUuODBdCi9SZXNvdXJjZXMgMiAwIFIKL0NvbnRlbnRzIDYgMCBSPj4KZW5kb2JqCjYgMCBvYmoKPDwvRmlsdGVyIC9GbGF0ZURlY29kZSAvTGVuZ3RoIDM3ND4+CnN0cmVhbQp4AaSUwYrjMAyG73kKHbeHemXLtpxrobuwt4JfYNMkA73NXOb1h8gDVRAxlLkF/f7/T7aIEP4NCI8BXWL4HC4Vfv+ZsRCnNcdlGkv297z8X+K83td5mikhrtM8LUQLhOQQoa5wrQM6RIS/AzpEhLcfJPnoMkMJLjJ4RwTnlLfKxwLr4OWzibhVd2LZKgdiCA7xWzSxoccMimmd49biAZPkeBPD1pvullLPqZjmnlSeVzFilEpjCl4zY+w5ew1FxTSxSSqNKXjNTOptrajuKSE7p5qnEbNkNaaMVjszPd/WirnzCJm1M/MulqWLxhS8ZnKPyYopITunelsTW6TSmMZZevMsap7mEYpimthRMeVTdztKVmvIioppY9U8JUTHepTzB7ke5f9pqhzU3rP0EdrKaCviTNtGakvjta3m1VZ7B9/2GVwqZEcBRkcMdYZfwUfOeIL6gGuF24uQcAhBVxiC4yAU4pRPUB9wrXAbvgIAAP//IdE4BQplbmRzdHJlYW0KZW5kb2JqCjEgMCBvYmoKPDwvVHlwZSAvUGFnZXMKL0tpZHMgWzMgMCBSIDUgMCBSIF0KL0NvdW50IDIKL01lZGlhQm94IFswIDAgNTk1LjI4IDg0MS44OV0KPj4KZW5kb2JqCjcgMCBvYmoKPDwvVHlwZSAvRm9udAovQmFzZUZvbnQgL1RpbWVzLVJvbWFuCi9TdWJ0eXBlIC9UeXBlMQovRW5jb2RpbmcgL1dpbkFuc2lFbmNvZGluZwo+PgplbmRvYmoKMiAwIG9iago8PAovUHJvY1NldCBbL1BERiAvVGV4dCAvSW1hZ2VCIC9JbWFnZUMgL0ltYWdlSV0KL0ZvbnQgPDwKL0ZkMDgzNzVmNjRlYjk4NjFjNmVhZTRkZmNmZGJkMzUwMGZiZGJlMzNlIDcgMCBSCj4+Ci9YT2JqZWN0IDw8Cj4+Ci9Db2xvclNwYWNlIDw8Cj4+Cj4+CmVuZG9iago4IDAgb2JqCjw8Ci9Qcm9kdWNlciAo/v8ARgBQAEQARgAgADEALgA3KQovQ3JlYXRpb25EYXRlIChEOjIwMjExMDA1MTMwMTIyKQovTW9kRGF0ZSAoRDoyMDIxMTAwNTEzMDEyMikKPj4KZW5kb2JqCjkgMCBvYmoKPDwKL1R5cGUgL0NhdGFsb2cKL1BhZ2VzIDEgMCBSCi9OYW1lcyA8PAovRW1iZWRkZWRGaWxlcyA8PCAvTmFtZXMgWwogIApdID4+Cj4+Cj4+CmVuZG9iagp4cmVmCjAgMTAKMDAwMDAwMDAwMCA2NTUzNSBmIAowMDAwMDAxMDk2IDAwMDAwIG4gCjAwMDAwMDEyODcgMDAwMDAgbiAKMDAwMDAwMDAwOSAwMDAwMCBuIAowMDAwMDAwMTE2IDAwMDAwIG4gCjAwMDAwMDA1NDUgMDAwMDAgbiAKMDAwMDAwMDY1MiAwMDAwMCBuIAowMDAwMDAxMTg5IDAwMDAwIG4gCjAwMDAwMDE0NDggMDAwMDAgbiAKMDAwMDAwMTU2MSAwMDAwMCBuIAp0cmFpbGVyCjw8Ci9TaXplIDEwCi9Sb290IDkgMCBSCi9JbmZvIDggMCBSCj4+CnN0YXJ0eHJlZgoxNjU4CiUlRU9GCg=="
                        },
                        "name": {
                          "description": "Имя файла.",
                          "type": "string",
                          "example": "stickers.pdf"
                        },
                        "mimeType": {
                          "description": "MIME type файла.",
                          "type": "string",
                          "example": "application/pdf"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "<li>Неверная форма запроса.</li>\n",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/responseBodyStickersError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/stocks/{warehouse}": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "put": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Остатки"
        ],
        "summary": "Обновить остатки товаров",
        "description": "Обновляет остатки товаров.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Warehouse"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "stocks"
                ],
                "properties": {
                  "stocks": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 1000,
                    "description": "Массив баркодов товаров и их остатков",
                    "items": {
                      "type": "object",
                      "properties": {
                        "sku": {
                          "type": "string",
                          "description": "Баркод",
                          "example": "BarcodeTest123"
                        },
                        "amount": {
                          "type": "integer",
                          "maximum": 100000,
                          "description": "Остаток",
                          "example": 10
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Обновлено"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  },
                  "IncorrectRequest": {
                    "$ref": "#/components/examples/IncorrectRequest"
                  },
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Ошибка обновления остатков",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Error"
                  },
                  "example": [
                    {
                      "code": "SubjectDBSRestriction",
                      "message": "Категория товара недоступна для продажи по схеме 'Везу на склад Wildberries'.",
                      "data": [
                        {
                          "sku": "skuTest1",
                          "stock": 0
                        }
                      ]
                    },
                    {
                      "code": "SubjectFBSRestriction",
                      "message": "Категория товара недоступна для продажи по схеме 'Везу самостоятельно до покупателя'.",
                      "data": [
                        {
                          "sku": "skuTest2",
                          "stock": 1
                        }
                      ]
                    },
                    {
                      "code": "UploadDataLimit",
                      "message": "Превышен лимит загружаемых данных",
                      "data": [
                        {
                          "sku": "skuTest2",
                          "stock": 10001
                        }
                      ]
                    },
                    {
                      "code": "CargoWarehouseRestriction",
                      "message": "Выбранный склад не предназначен для крупногабаритных товаров. Добавьте их на соответствующий склад",
                      "data": [
                        {
                          "sku": "skuTest3",
                          "stock": 10
                        }
                      ]
                    },
                    {
                      "code": "NotFound",
                      "message": "Не найдено",
                      "data": [
                        {
                          "sku": "skuTest4",
                          "stock": 10
                        }
                      ]
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Остатки"
        ],
        "summary": "Удалить остатки товаров",
        "description": "Удаляет остатки товаров. **Внимание! Действие необратимо**. Удаленный остаток будет необходимо загрузить повторно для возобновления продаж.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Warehouse"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "skus": {
                    "type": "array",
                    "nullable": false,
                    "minItems": 1,
                    "maxItems": 1000,
                    "description": "Массив баркодов",
                    "items": {
                      "type": "string",
                      "nullable": false,
                      "example": "BarcodeTest123"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Удалено"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  },
                  "IncorrectRequest": {
                    "$ref": "#/components/examples/IncorrectRequest"
                  },
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "description": "Не найдены запрашиваемые данные",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": "NotFound",
                  "message": "Не найдено",
                  "data": [
                    "skuTest1",
                    "skuTest2"
                  ]
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Остатки"
        ],
        "summary": "Получить остатки товаров",
        "description": "Возвращает остатки товаров.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Warehouse"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "nullable": false,
                "minItems": 1,
                "maxItems": 1000,
                "properties": {
                  "skus": {
                    "type": "array",
                    "description": "Массив баркодов",
                    "items": {
                      "type": "string",
                      "example": "BarcodeTest123"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Список остатков",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stocks": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "sku": {
                            "type": "string",
                            "nullable": false,
                            "description": "Баркод",
                            "example": "BarcodeTest123"
                          },
                          "amount": {
                            "type": "integer",
                            "nullable": false,
                            "description": "Остаток",
                            "example": 10
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  },
                  "IncorrectRequest": {
                    "$ref": "#/components/examples/IncorrectRequest"
                  },
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Создать новую поставку",
        "description": "**Ограничения работы с поставками**:\n\n- Только для сборочных заданий по схеме \"Везу на склад WB\"\n- При добавлении в поставку все передаваемые сборочные задания в статусе **new** (\"Новое\") будут автоматически переведены в статус **confirm** (\"На сборке\").\n- Обратите внимание, что если вы переведёте сборочное задание в статус **cancel** (\"Отмена продавцом\"), то сборочное задание автоматически удалится из поставки, если было прикреплено к ней.\n- Поставку можно собрать только из одного типа сборочных заданий: сКГТ (isLargeCargo = true) или обычный (isLargeCargo = false). Новая поставка не обладает сКГТ-признаком. При добавлении первого заказа в поставку она приобретает сКГТ-признак добавляемого товара в заказе.\n\n**Порядок работы**:\n\n1. Создайте новую поставку с помощью метода **POST** */api/v3/supplies.* В ответ вернется идентификатор созданной поставки в формате \"WB-GI-1234567\".\n2. В текущую новую поставку нужно добавить сборочные задания, которые вы повезёте на склад, методом **PATCH** */api/v3/supplies/{id поставки}/orders/{id сборочного задания}*. Обратите внимание, что при добавлении сборочных заданий к поставке они будут переведены в статус **confirm** (\"На сборке\").\n3. После добавления сборочных заданий к поставке вы можете получить этикетки с помощью метода **POST** */api/v3/orders/stickers*. Обратите внимание, что этикетки для сборочных заданий можно получить только тогда, когда они в статусе **confirm** (\"На сборке\").\n4. После того как поставка будет упомплектована нужными сборочными заданиями, необходимо ее передать в доставку с помощью метода **PATCH** */api/v3/supplies/{id поставки}/deliver*. Обратите внимание, что при передаче сборочных заданий в доставку они будут автоматически собраны, т.е. переведены в статус **complete** (\"В доставке\").\n5. Список сборочных заданий, добавленных к поставке, можно получить методом **GET** */api/v3/supplies/{id поставки}/orders*.\n6. Все поставки, имеющиеся у продавца, можно получить методом **GET** */api/v3/supplies*.\n7. Детализацию конкретной поставки можно получить методом **GET** */api/v3/supplies/{id поставки}*.\n8. С помощью метода **DELETE** */api/v3/supplies/{id поставки}* можно удалить поставку при условии, что она активна и за ней не закреплено ни одно сборочное задание.\n9. Если поставка была отсканирована в пункте приёмки, но при этом в ней имеются ещё неотсканированные товары, то спустя определенное время необходимо доставить их повторно.\n  Все сборочные задания, требующие повторной отгрузки на данный момент, можно получить с помощью метода **GET** */api/v3/supplies/orders/reshipment*. \n  При помощи метода **PATCH** */api/v3/supplies/{id поставки}/orders/{id сборочного задания}* данные сборочные задания можно перевести в другую активную поставку (сборочное задание также будет переведено в статус **confirm** (\"На сборке\")).\n10. Метод **PATCH** */api/v3/supplies/{id поставки}/orders/{id сборочного задания}* также позволяет перемещать сборочные задания между активными поставками. Обратите внимание, что нельзя перемещать сборочное задание из уже закрытой поставки, только если оно не требует повторной отгрузки.\n11. QR-код поставки можно получить методом **GET** */api/v3/supplies/{id поставки}/barcode* в формате svg, zpl или png. Доступно только после передачи поставки в доставку.\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128,
                    "description": "Наименование поставки",
                    "example": "Тестовая поставка"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Создано",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "nullable": false,
                      "description": "Идентификатор поставки",
                      "example": "WB-GI-1234567"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Получить список поставок",
        "description": "Возвращает список поставок",
        "parameters": [
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/Next"
          }
        ],
        "responses": {
          "200": {
            "description": "Список поставок",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "next": {
                      "$ref": "#/components/schemas/Next"
                    },
                    "supplies": {
                      "type": "array",
                      "nullable": false,
                      "description": "Список поставок",
                      "items": {
                        "$ref": "#/components/schemas/Supply"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies/{supply}": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Получить информацию о поставке",
        "description": "Возвращает информацию о поставке",
        "parameters": [
          {
            "$ref": "#/components/parameters/Supply"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о поставке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supply"
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "delete": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Удалить поставку",
        "description": "Удаляет поставку, если она активна и за ней не закреплено ни одно сборочное задание.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Supply"
          }
        ],
        "responses": {
          "204": {
            "description": "Удалено"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "За поставкой закреплены сборочные задания",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "SupplyHasOrders": {
                    "$ref": "#/components/examples/SupplyHasOrders"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies/{supply}/orders": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Получить сборочные задания в поставке",
        "description": "Возвращает сборочные задания, закреплённые за поставкой.",
        "parameters": [
          {
            "$ref": "#/components/parameters/Supply"
          }
        ],
        "responses": {
          "200": {
            "description": "Список сборочных заданий",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "orders": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "$ref": "#/components/schemas/SupplyOrder"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies/{supply}/orders/{order}": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "patch": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Добавить к поставке сборочное задание",
        "description": "Добавляет к поставке сборочное задание и переводит его в статус **confirm** (\"На сборке\"). \nТакже может перемещать сборочное задание между активными поставками, либо из закрытой в активную при условии, что сборочное задание требует повторной отгрузки.\nДобавить в поставку возможно только задания с соответствующим сКГТ-признаком (isLargeCargo), либо если поставке ещё не присвоен сКГТ-признак (isLargeCargo = null).\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Supply"
          },
          {
            "$ref": "#/components/parameters/Order"
          }
        ],
        "responses": {
          "204": {
            "description": "Задание закреплено за поставкой"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Ошибка добавления сборочного задания к поставке",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "FailedToAddSupplyOrder": {
                    "$ref": "#/components/examples/FailedToAddSupplyOrder"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies/{supply}/deliver": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "patch": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Передать поставку в доставку",
        "description": "Закрывает поставку и переводит все сборочные задания в ней в статус **complete** (\"В доставке\").\nПосле закрытия поставки новые сборочные задания к ней добавить будет невозможно.\nПередать поставку в доставку можно только при наличии в ней хотя бы одного сборочного задания.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Supply"
          }
        ],
        "responses": {
          "204": {
            "description": "Передано в доставку"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Ошибка закрытия поставки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "SupplyHasZeroOrders": {
                    "$ref": "#/components/examples/SupplyHasZeroOrders"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies/orders/reshipment": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Получить все сборочные задания на повторную отгрузку",
        "description": "Возвращает все сборочные задания, требующие повторной отгрузки.",
        "responses": {
          "200": {
            "description": "Список сборочных заданий, требующих повторной отгрузки",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "orders": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "supplyID": {
                            "type": "string",
                            "nullable": false,
                            "description": "Идентификатор поставки",
                            "example": "WB-GI-1234567"
                          },
                          "orderID": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": false,
                            "description": "Идентификатор сборочного задания",
                            "example": 5632423
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/supplies/{supply}/barcode": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Получить QR поставки",
        "description": "Возвращает QR в svg, zplv (вертикальный), zplh (горизонтальный), png. <br>\nМожно получить, только если поставка передана в доставку.\n<dt>Доступные размеры:</dt>\n<dd>580x400 пикселей, при параметрах width = 58, height=40</dd>\n<dd>400x300пикселей, при параметрах width = 40, height=30</dd>\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Supply"
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "description": "Тип этикетки",
            "schema": {
              "type": "string",
              "enum": [
                "svg",
                "zplv",
                "zplh",
                "png"
              ]
            }
          },
          {
            "name": "width",
            "in": "query",
            "required": true,
            "description": "Ширина этикетки",
            "schema": {
              "type": "integer",
              "enum": [
                58,
                40
              ]
            }
          },
          {
            "name": "height",
            "in": "query",
            "required": true,
            "description": "Высота этикетки",
            "schema": {
              "type": "integer",
              "enum": [
                40,
                30
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "QR поставки",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "barcode": {
                      "type": "string",
                      "nullable": false,
                      "description": "Закодированное значение этикетки"
                    },
                    "file": {
                      "type": "string",
                      "format": "byte",
                      "nullable": false,
                      "description": "Полное представление этикетки в заданном формате",
                      "example": "U3dhZ2dlciByb2Nrcw=="
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Ошибка запроса данных",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "SupplyNotClosed": {
                    "$ref": "#/components/examples/SupplyNotClosed"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/orders/{order}/cancel": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "patch": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Отменить сборочное задание",
        "description": "Переводит сборочное задание в статус **cancel** (\"Отменено продавцом\").",
        "parameters": [
          {
            "$ref": "#/components/parameters/Order"
          }
        ],
        "responses": {
          "204": {
            "description": "Отменено"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Ошибка обновления статуса",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "StatusMismatch": {
                    "$ref": "#/components/examples/StatusMismatch"
                  },
                  "StatusChangeNotAllowed": {
                    "$ref": "#/components/examples/StatusChangeNotAllowed"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/orders/status": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Получить статусы сборочных заданий",
        "description": "Возвращает статусы сборочных заданий по переданному списку идентификаторов сборочных заданий.\n\n**supplierStatus** - статус сборочного задания, триггером изменения которого является сам продавец.<br>\nВозможны следующие значения данного поля:\n| Статус   | Описание            | Как перевести сборочное задание в данный статус |\n| -------  | ---------           | --------------------------------------|\n| new      | Новое сборочное задание |          \n| confirm  | На сборке            | При добавлении сборочного задания к поставке **PATCH** */api/v3/supplies/{supply}/orders/{order}*\n| complete | В доставке           | При переводе в доставку соответствующей поставки **PATCH** */api/v3/supplies/{supply}/deliver*\n| cancel   | Отменено продавцом   | **PATCH** */api/v3/orders/{order}/cancel*\n\n\n**wbStatus** - статус сборочного задания в системе Wildberries.<br>\nВозможны следующие значения данного поля:\n- **waiting** - сборочное задание в работе\n- **sorted** - сборочное задание отсортировано\n- **sold** - сборочное задание получено покупателем\n- **canceled** - отмена сборочного задания\n- **canceled_by_client** - отмена сборочного задания покупателем\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orders": {
                    "type": "array",
                    "required": true,
                    "minItems": 1,
                    "maxItems": 1000,
                    "description": "Список идентификаторов сборочных заданий",
                    "items": {
                      "type": "integer",
                      "format": "int64",
                      "example": 5632423
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Список статусов сборочных заданий",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "orders": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": false,
                            "description": "Идентификатор сборочного задания",
                            "example": 5632423
                          },
                          "supplierStatus": {
                            "type": "string",
                            "nullable": false,
                            "description": "Статус сборочного задания продавца (устанавливается продавцом)",
                            "enum": [
                              "new",
                              "confirm",
                              "complete",
                              "cancel"
                            ],
                            "example": "new"
                          },
                          "wbStatus": {
                            "type": "string",
                            "nullable": false,
                            "description": "Статус сборочного задания в системе Wildberries",
                            "enum": [
                              "waiting",
                              "sorted",
                              "sold",
                              "canceled",
                              "canceled_by_client"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  },
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  },
                  "IncorrectRequest": {
                    "$ref": "#/components/examples/IncorrectRequest"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/orders": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Получить информацию по сборочным заданиям",
        "description": "Возвращает информацию по сборочным заданиям без их актуального статуса. \nДанные по сборочному заданию, возвращающиеся в данном методе, не меняются.\nРекомендуется использовать для получения исторических данных.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Limit"
          },
          {
            "$ref": "#/components/parameters/Next"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Дата начала периода в формате Unix timestamp. Необязательный параметр."
          },
          {
            "name": "dateTo",
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "description": "Дата конца периода в формате Unix timestamp. Необязательный параметр."
          }
        ],
        "responses": {
          "200": {
            "description": "Список сборочных заданий",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "next": {
                      "$ref": "#/components/schemas/Next"
                    },
                    "orders": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/orders/new": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Получить список новых сборочных заданий",
        "description": "Возвращает список всех новых сборочных заданий у продавца на данный момент.\n",
        "responses": {
          "200": {
            "description": "Список сборочных заданий",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "nullable": false,
                  "properties": {
                    "orders": {
                      "type": "array",
                      "nullable": false,
                      "description": "Список новых сборочных заданий",
                      "items": {
                        "$ref": "#/components/schemas/Order"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/orders/{order}/meta/sgtin": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Закрепить за сборочным заданием КиЗ (маркировку Честного знака)",
        "description": "Закрепляет за сборочным заданием КиЗ (маркировку Честного знака). \n\nНа данный момент требуется только для фармацевтической продукции.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/Order"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sgtin": {
                    "type": "array",
                    "description": "Массив КиЗов.",
                    "minItems": 1,
                    "maxItems": 1000,
                    "items": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Код маркировки на упаковке",
                          "example": 123456
                        },
                        "sid": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Идентификатор места деятельности субъекта обращения в ИС МДЛП",
                          "example": 123
                        },
                        "numerator": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Числитель, количество единиц товара из упаковки (1, если продается целая упаковка)",
                          "example": 1
                        },
                        "denominator": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Знаменатель, количество единиц товара в упаковке (1, если продается целая упаковка, т.е. для полной упаковки числитель = знаменатель = 1)",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Отправлено"
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  },
                  "IncorrectRequest": {
                    "$ref": "#/components/examples/IncorrectRequest"
                  },
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "409": {
            "description": "Для данной продукции КиЗ не требуется",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "SgtinNotRequired": {
                    "$ref": "#/components/examples/SgtinNotRequired"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v3/orders/stickers": {
      "servers": [
        {
          "url": "https://suppliers-api.wildberries.ru"
        }
      ],
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "tags": [
          "Marketplace / Сборочные задания"
        ],
        "summary": "Получить этикетки для сборочных заданий",
        "description": "Возвращает список этикеток по переданному массиву сборочных заданий.\nМожно запросить этикетку в формате svg, zplv (вертикальный), zplh (горизонтальный), png.\n\n**Ограничения при работе с методом**:\n- Нельзя запросить больше 100 этикеток за раз (не более 100 идентификаторов сборочных заданий в запросе).\n- Метод возвращает этикетки только для сборочных заданий, находящихся на сборке (в статусе **confirm**).\n- Доступные размеры:\n<dd>580x400 пикселей, при параметрах width = 58, height=40</dd>\n<dd>400x300пикселей, при параметрах width = 40, height=30</dd>\n",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": true,
            "description": "Тип этикетки",
            "schema": {
              "type": "string",
              "enum": [
                "svg",
                "zplv",
                "zplh",
                "png"
              ]
            }
          },
          {
            "name": "width",
            "in": "query",
            "required": true,
            "description": "Ширина этикетки",
            "schema": {
              "type": "integer",
              "enum": [
                58,
                40
              ]
            }
          },
          {
            "name": "height",
            "in": "query",
            "required": true,
            "description": "Высота этикетки",
            "schema": {
              "type": "integer",
              "enum": [
                40,
                30
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "orders": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 100,
                    "description": "Массив идентификаторов сборочных заданий",
                    "items": {
                      "type": "integer",
                      "format": "int64",
                      "example": 5346346
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Список этикеток",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "stickers": {
                      "type": "array",
                      "nullable": false,
                      "items": {
                        "type": "object",
                        "properties": {
                          "orderId": {
                            "type": "integer",
                            "format": "int64",
                            "nullable": false,
                            "description": "Идентификатор сборочного задания",
                            "example": 5346346
                          },
                          "partA": {
                            "type": "integer",
                            "nullable": false,
                            "description": "Первая часть идентификатора этикетки (для печати подписи)",
                            "example": 231648
                          },
                          "partB": {
                            "type": "integer",
                            "nullable": false,
                            "description": "Вторая часть идентификатора этикетки",
                            "example": 9753
                          },
                          "barcode": {
                            "type": "string",
                            "nullable": false,
                            "description": "Закодированное значение этикетки",
                            "example": "!uKEtQZVx"
                          },
                          "file": {
                            "type": "string",
                            "format": "byte",
                            "nullable": false,
                            "description": "Полное представление этикетки в заданном формате",
                            "example": "PD94bWwgdmVyc2lvbj0iMS4wIj8+CjwhLS0gR2VuZXJhdGVkIGJ5IFNWR28gLS0+Cjxzdmcgd2lkdGg9IjQwMCIgaGVpZ2h0PSIzMDAiCiAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICAgIHhtbG5zOnhsaW5rPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hsaW5rIj4KPHJlY3QgeD0iMCIgeT0iMCIgd2lkdGg9IjQwMCIgaGVpZQiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzE4IiB5PSIyMCIgd2lkdGg9IjYiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzI2IiB5PSIyMCIgd2lkdGg9IjIiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMzMwIiB5PSIyMCIgd2lkdGg9IjQiIGhlaWdodD0iMTcwIiBzdHlsZT0iZmlsbDpibGFjayIgLz4KPHJlY3QgeD0iMjAiIHk9IjIwMCIgd2lkdGg9IjM1MCIgaGVpZ2h0PSI5MCIgc3R5bGU9ImZpbGw6YmxhY2siIC8+Cjx0ZXh0IHg9IjMwIiB5PSIyNDAiIHN0eWxlPSJmaWxsOndoaXRlO2ZvbnQtc2l6ZTozMHB0O3RleHQtYW5jaG9yOnN0YXJ0IiA+MjMxNjQ4PC90ZXh0Pgo8dGV4dCB4PSIzNTAiIHk9IjI3MCIgc3R5bGU9ImZpbGw6d2hpdGU7Zm9udC1zaXplOjUwcHQ7dGV4dC1hbmNob3I6ZW5kIiA+OTc1MzwvdGV4dD4KPC9zdmc+Cg=="
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Запрос содержит некорректные данные. Проверьте его на соответствие документации.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "examples": {
                  "IncorrectRequestBody": {
                    "$ref": "#/components/examples/IncorrectRequestBody"
                  },
                  "IncorrectRequest": {
                    "$ref": "#/components/examples/IncorrectRequest"
                  },
                  "IncorrectParameter": {
                    "$ref": "#/components/examples/IncorrectParameter"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/AccessDenied"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/api/v1/supplier/incomes": {
      "servers": [
        {
          "url": "https://statistics-api.wildberries.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Поставки",
        "description": "Поставки",
        "tags": [
          "Статистика"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/dateFrom"
          }
        ],
        "responses": {
          "200": {
            "description": "Список поставок",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IncomesItem"
                  }
                },
                "example": [
                  {
                    "incomeId": 12345,
                    "number": "",
                    "date": "2022-05-08T00:00:54",
                    "lastChangeDate": "2022-05-08T00:44:15.5",
                    "supplierArticle": "ABCDEF",
                    "techSize": "0",
                    "barcode": "2000328074123",
                    "quantity": 3,
                    "totalPrice": 0,
                    "dateClose": "2022-05-08T00:00:00",
                    "warehouseName": "Подольск",
                    "nmId": 1234567,
                    "status": "Принято"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/supplier/stocks": {
      "servers": [
        {
          "url": "https://statistics-api.wildberries.ru/"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Склад",
        "description": "Склад. Данные обновляются раз в сутки. Сервис статистики не хранит историю остатков товаров, поэтому получить данные об остатках товаров на прошедшую, не сегодняшнюю, дату - невозможно.",
        "tags": [
          "Статистика"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/dateFrom"
          }
        ],
        "responses": {
          "200": {
            "description": "Список товаров на складе",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StocksItem"
                  }
                },
                "example": [
                  {
                    "lastChangeDate": "2022-04-28T05:57:24.787",
                    "supplierArticle": "12345",
                    "techSize": "48",
                    "barcode": "",
                    "quantity": 0,
                    "isSupply": false,
                    "isRealization": true,
                    "quantityFull": 3,
                    "warehouseName": "Коледино",
                    "nmId": 1234567,
                    "subject": "Брюки",
                    "category": "Одежда",
                    "daysOnSite": 0,
                    "brand": "M",
                    "SCCode": "3200-1234",
                    "Price": 5000,
                    "Discount": 0
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/api/v1/supplier/orders": {
      "servers": [
        {
          "url": "https://statistics-api.wildberries.ru/"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Заказы",
        "description": "Заказы. <br>  Важно: гарантируется хранение данных по заказам не более 90 дней от даты заказа. Данные обновляются раз в 30 минут.  Точное время обновления информации в сервисе можно увидеть в поле `lastChangeDate`. <br> Для идентификации товаров из одного заказа, а также продаж по ним, следует использовать  поле `gNumber` (строки с одинаковым значением этого поля относятся к одному заказу) и номер  уникальной позиции в заказе `odid` (`rid`). \n",
        "tags": [
          "Статистика"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/dateFrom"
          },
          {
            "$ref": "#/components/parameters/flag"
          }
        ],
        "responses": {
          "200": {
            "description": "Список заказов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrdersItem"
                  }
                },
                "example": [
                  {
                    "date": "2022-03-02T14:34:05",
                    "lastChangeDate": "2022-03-02T19:30:16",
                    "supplierArticle": "12345",
                    "techSize": "0",
                    "barcode": "9990016520011",
                    "totalPrice": 120.56,
                    "discountPercent": 0,
                    "warehouseName": "Екатеринбург",
                    "oblast": "Московская",
                    "incomeID": 123456,
                    "odid": 12345678,
                    "nmId": 12345678,
                    "subject": "Респираторы",
                    "category": "Спецодежда и СИЗы",
                    "brand": "wildberries",
                    "isCancel": false,
                    "cancel_dt": "0001-01-01T00:00:00",
                    "gNumber": "12345678",
                    "sticker": ""
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Ошибка в запросе",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    "can't parse dateFrom"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Слишком много запросов"
          }
        }
      }
    },
    "/api/v1/supplier/sales": {
      "servers": [
        {
          "url": "https://statistics-api.wildberries.ru/"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Продажи",
        "description": "Продажи. <br> Важно: гарантируется хранение данных по заказам не более 90 дней от даты заказа. Данные обновляются раз в 30 минут. Точное время обновления информации в сервисе можно увидеть в поле `lastChangeDate`. <br> Для идентификации товаров из одного заказа, а также продаж по ним, следует использовать  поле `gNumber` (строки с одинаковым значением этого поля относятся к одному заказу) и номер  уникальной позиции в заказе `odid` (`rid`).  <br> Для расчета окончательной стоимости (суммы к оплате) следует пользоваться следующей формулой: <br> `PriceWithDiscount = totalPrice * ((100 – discountPercent)/100) * ((100 – promoCodeDiscount)/100) *((100 – spp)/100)`\n",
        "tags": [
          "Статистика"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/dateFrom"
          },
          {
            "$ref": "#/components/parameters/flag"
          }
        ],
        "responses": {
          "200": {
            "description": "Список продаж",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SalesItem"
                  }
                },
                "example": [
                  {
                    "date": "2022-03-04T00:00:00",
                    "lastChangeDate": "2022-03-06T10:11:07",
                    "supplierArticle": "12345",
                    "techSize": "",
                    "barcode": "123453559000",
                    "totalPrice": 0,
                    "discountPercent": 0,
                    "isSupply": false,
                    "isRealization": true,
                    "promoCodeDiscount": 0,
                    "warehouseName": "Подольск",
                    "countryName": "Россия",
                    "oblastOkrugName": "Центральный федеральный округ",
                    "regionName": "Московская",
                    "incomeID": 0,
                    "saleID": "D99937000247",
                    "odid": 456739003897,
                    "spp": 0,
                    "forPay": 0,
                    "finishedPrice": 0,
                    "priceWithDisc": 0,
                    "nmId": 1234567,
                    "subject": "Мультистайлеры",
                    "category": "Бытовая техника",
                    "brand": "Тест",
                    "IsStorno": 0,
                    "gNumber": "34343462218572569531",
                    "sticker": ""
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Ошибка в запросе",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    "can't parse dateFrom"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Слишком много запросов"
          }
        }
      }
    },
    "/api/v1/supplier/reportDetailByPeriod": {
      "servers": [
        {
          "url": "https://statistics-api.wildberries.ru/"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Отчет о продажах по реализации",
        "description": "Отчет о продажах по реализации.  <br> В отчете доступны данные за последние 3 месяца. <br> В случае отсутствия данных за указанный период метод вернет `null`. <br> Технический перерыв в работе метода: каждый понедельник с 3:00 до 16:00.\n",
        "tags": [
          "Статистика"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/dateFrom"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 0
            },
            "required": false,
            "description": "Максимальное количество строк отчета, возвращаемых методом. Не может быть более 100000."
          },
          {
            "in": "query",
            "name": "dateTo",
            "schema": {
              "type": "string",
              "format": "date"
            },
            "required": true,
            "description": "Конечная дата отчета"
          },
          {
            "in": "query",
            "name": "rrdid",
            "schema": {
              "type": "integer"
            },
            "required": false,
            "description": "Уникальный идентификатор строки отчета. Необходим для получения отчета частями. \n<br>\nЗагрузку отчета нужно начинать с `rrdid = 0` и при последующих вызовах API передавать в запросе значение `rrd_id` из последней строки, полученной в результате предыдущего вызова. \n<br>\nТаким образом для загрузки одного отчета может понадобиться вызывать API до тех пор, пока количество возвращаемых строк не станет равным нулю.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Список реализованных позиций",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DetailReportItem"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/supplier/excise-goods": {
      "servers": [
        {
          "url": "https://statistics-api.wildberries.ru/"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Отчет по КиЗам",
        "description": "Отчет по КиЗам. <br> КИЗ — это контрольный идентификационный знак.  Он представляет собой маркировку, похожую на QR-код, который проставляется на некоторых товарах.  Его можно отсканировать с помощью специального приложения и убедиться в качестве и оригинальности товара.  Сканирование КИЗов доступно как продавцу, так и покупателю, а также всем остальным участникам процесса продажи.\n",
        "tags": [
          "Статистика"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/dateFrom"
          }
        ],
        "responses": {
          "200": {
            "description": "Список КиЗов",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExcItem"
                  }
                },
                "example": [
                  {
                    "id": 123414261523,
                    "finishedPrice": 2940,
                    "operationTypeId": 1,
                    "fiscalDt": "2022-05-09T14:00:00Z",
                    "docNumber": 6793,
                    "fnNumber": "1160440302500286",
                    "regNumber": "1104558786035223",
                    "excise": "010465011156521721FG7w!.&!Axy/\"1918039192/NLrBznGPtzY7on4h96TRG1awexb950Xd1FQKZ1G7R+8IM7dejgKnCxr+5Mc1fMF4EV+2A3BLDP6gs1geFcBOg==",
                    "date": "2022-05-11T12:14:20.953Z"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Ошибка в запросе",
            "content": {
              "application/json": {
                "example": {
                  "errors": [
                    "can't parse dateFrom"
                  ]
                }
              }
            }
          },
          "429": {
            "description": "Слишком много запросов"
          }
        }
      }
    },
    "/adv/v0/count": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Получение РК",
        "description": "Получение количества рекламных кампаний (РК) поставщика",
        "tags": [
          "Реклама"
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "all": {
                      "description": "Общее количество РК всех статусов и типов",
                      "type": "integer",
                      "example": 99
                    },
                    "adverts": {
                      "description": "Массив РК",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "<dl> <dt>Тип РК:</dt> <dd><code>4</code> - реклама в каталоге</dd> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
                            "type": "integer",
                            "example": 6
                          },
                          "status": {
                            "description": "<dl> <dt>Статус РК:</dt> <dd><code>9</code> - идут показы</dd> <dd><code>11</code> - РК на паузе</dd> </dl>\n",
                            "type": "integer",
                            "example": 11
                          },
                          "count": {
                            "description": "Количество РК",
                            "type": "integer",
                            "example": 2
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/adverts": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список РК",
        "description": "Получение списка РК поставщика",
        "tags": [
          "Реклама"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "<dl> <dt>Статус РК:</dt> <dd><code>9</code> - идут показы</dd> <dd><code>11</code> - РК на паузе</dd> </dl>\n",
            "schema": {
              "type": "integer",
              "enum": [
                9,
                11
              ]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "<dl> <dt>Тип РК:</dt> <dd><code>4</code> - реклама в каталоге</dd> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
            "schema": {
              "type": "integer",
              "enum": [
                4,
                5,
                6,
                7
              ]
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Количество кампаний в ответе",
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Смещение относительно первой РК",
            "schema": {
              "type": "integer",
              "example": 0
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "<dl> <dt>Порядок:</dt> <dd><code>create</code> (по времени создания РК)</dd> <dd><code>change</code> (по времени последнего изменения РК)</dd> <dd><code>id</code> (по идентификатору РК)</dd> </dl> <br>Например: <code>**/api/v0/adverts?type=6&limit=5&offset=10&<b>order=change</b>&direction=asc**</code>\n",
            "schema": {
              "type": "string",
              "enum": [
                "create",
                "change",
                "id"
              ]
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "<dl> <dt>Направление:</dt> <dd><code>desc</code> (от большего к меньшему)</dd> <dd><code>asc</code> (от меньшего к большему)</dd> </dl> <br>Например: <code>**/api/v0/adverts?type=6&limit=5&offset=10&order=change&<b>direction=asc</b>**</code>\n",
            "schema": {
              "type": "string",
              "enum": [
                "desc",
                "asc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "advertId": {
                        "description": "Идентификатор РК",
                        "type": "integer",
                        "example": 456
                      },
                      "type": {
                        "description": "<dl> <dt>Тип РК:</dt> <dd><code>4</code> - реклама в каталоге</dd> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
                        "type": "integer",
                        "example": 6
                      },
                      "status": {
                        "description": "<dl> <dt>Статус РК:</dt> <dd><code>9</code> - идут показы</dd> <dd><code>11</code> - РК на паузе</dd> </dl>\n",
                        "type": "integer",
                        "example": 11
                      },
                      "createTime": {
                        "description": "Время создания РК",
                        "type": "string",
                        "example": "2022-03-09T10:50:21.831623+03:00"
                      },
                      "changeTime": {
                        "description": "Время последнего изменения РК",
                        "type": "string",
                        "example": "2022-12-22T18:24:19.808701+03:00"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/advert": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Информация о РК",
        "description": "Получение информации об одной РК",
        "tags": [
          "Реклама"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор РК",
            "schema": {
              "type": "integer",
              "example": 1234
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "advertId": {
                      "description": "Идентификатор РК",
                      "type": "integer",
                      "example": 1234
                    },
                    "type": {
                      "description": "<dl> <dt>Тип РК:</dt> <dd><code>4</code> - реклама в каталоге</dd> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
                      "type": "integer",
                      "example": 4
                    },
                    "status": {
                      "description": "<dl> <dt>Статус РК:</dt> <dd><code>9</code> - идут показы</dd> <dd><code>11</code> - РК на паузе</dd> </dl>\n",
                      "type": "integer",
                      "example": 9
                    },
                    "createTime": {
                      "description": "Время создания РК",
                      "type": "string",
                      "example": "2022-03-09T10:50:21.831623+03:00"
                    },
                    "changeTime": {
                      "description": "Время последнего изменения РК",
                      "type": "string",
                      "example": "2022-12-22T18:24:19.808701+03:00"
                    },
                    "params": {
                      "description": "Параметры РК",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "intervals": {
                            "description": "Интервалы часов показа РК",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Begin": {
                                  "description": "Время начала показов",
                                  "type": "integer"
                                },
                                "End": {
                                  "description": "Время окончания показов",
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "dailyBudget": {
                            "description": "Дневной бюджет, если не установлен, то 0",
                            "type": "integer"
                          },
                          "price": {
                            "description": "Текущая ставка",
                            "type": "integer"
                          },
                          "menuId": {
                            "description": "Идентификатор меню, где размещается РК (для РК в каталоге)"
                          },
                          "subjectId": {
                            "description": "Идентификатор предметной группы, для которой создана РК (для РК в карточке товара, поиске и рекомендациях)"
                          },
                          "setId": {
                            "description": "Идентификатор сочетания предмета и пола (для РК в карточке товара)"
                          }
                        }
                      },
                      "example": [
                        {
                          "intervals": [
                            {
                              "Begin": 3,
                              "End": 20
                            }
                          ],
                          "dailyBudget": 0,
                          "price": 50,
                          "menuId": 776
                        },
                        {
                          "intervals": [],
                          "dailyBudget": 1500,
                          "price": 234,
                          "menuId": 667
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/adv/v0/start": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Запуск РК",
        "description": "РК в статусе <b>\"11 - на паузе\"</b> - можно снова запустить. <br>Для запуска необходимо, чтобы у РК были активные ставки. <br><b>GET</b> на `/api/v0/start?id=***` - в ответ `200`, если статус изменен, или `400`, если это сделать не удалось.\n",
        "tags": [
          "Реклама"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор РК",
            "schema": {
              "type": "integer",
              "example": 1234
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Статус изменен"
          },
          "400": {
            "description": "Статус не изменен"
          }
        }
      }
    },
    "/adv/v0/pause": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Пауза РК",
        "description": "РК в статусе <b>\"9 - идут показы\"</b> - можно запаузить, сделав <b>GET</b> на  `/api/v0/pause?id=***`.\n",
        "tags": [
          "Реклама"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор РК",
            "schema": {
              "type": "integer",
              "example": 1234
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Статус изменен"
          },
          "400": {
            "description": "Статус не изменен"
          }
        }
      }
    },
    "/adv/v0/cpm": {
      "servers": [
        {
          "url": "https://advert-api.wb.ru"
        }
      ],
      "get": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Список ставок",
        "description": "Получение списка ставок для типа размещения",
        "tags": [
          "Реклама"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "<dl> <dt>Тип РК:</dt> <dd><code>4</code> - реклама в каталоге</dd> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
            "schema": {
              "type": "integer",
              "enum": [
                4,
                5,
                6,
                7
              ]
            },
            "required": true
          },
          {
            "name": "param",
            "in": "query",
            "description": "Параметр запроса, по которому будет получен список ставок активных РК. <br>Должен быть значением `menuId`, `subjectId` или `setId` в зависимости от типа РК.\n",
            "schema": {
              "type": "integer",
              "example": 1234
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Cmp": {
                        "description": "Размер ставки",
                        "type": "integer",
                        "example": 290
                      },
                      "Count": {
                        "description": "Количество ставок",
                        "type": "integer",
                        "example": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "HeaderApiKey": []
          }
        ],
        "summary": "Изменение ставки у РК",
        "description": "Изменение ставки у рекламной кампании <br>Доступно для РК в карточке товара, поиске или рекомендациях\n",
        "tags": [
          "Реклама"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "advertId": {
                    "description": "Идентификатор РК, где меняется ставка",
                    "type": "integer",
                    "example": 789
                  },
                  "type": {
                    "description": "<dl> <dt>Тип РК, где меняется ставка:</dt> <dd><code>5</code> - реклама в карточке товара</dd> <dd><code>6</code> - реклама в поиске</dd> <dd><code>7</code> - реклама в рекомендациях на главной странице</dd> </dl>\n",
                    "type": "integer",
                    "enum": [
                      5,
                      6,
                      7
                    ]
                  },
                  "cpm": {
                    "description": "Новое значение ставки",
                    "type": "integer",
                    "example": 456
                  },
                  "param": {
                    "description": "Параметр, для которго будет внесено изменение (является значением `subjectId` или `setId` в зависимости от типа РК)\n",
                    "type": "integer",
                    "example": 23
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Статус изменен"
          },
          "400": {
            "description": "Статус не изменен"
          }
        }
      }
    }
  }
}